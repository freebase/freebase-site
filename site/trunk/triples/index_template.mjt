<acre:script>
  var mf = acre.require("MANIFEST").mf;
  var c = this.exports.c = {};
  var h = mf.require("core", "helpers");
  var i18n = mf.require("i18n", "i18n");
  var _ = i18n.gettext;
</acre:script>

<acre:block def="title()">
  ${_('Explore')} - ${c.topic.id}
</acre:block>

<acre:block def="head()">
  <link rel="stylesheet" type="text/css" href="${mf.css_src('triples.mf.css')}" />
</acre:block>

<acre:block def="content_header()">
</acre:block>

<acre:block def="content_body()">
  <div style="float:right;">
    <div class="limit">
      ${h.sprintf(_("limit current at %s"), i18n.format_number(c.limit))}<br/>
      <acre:block if="c.prev_limit">
        ${h.bless_sprintf(_("set to %s or %s"), 
        h.tag("a", i18n.format_number(c.prev_limit), "href", c.prev_limit_url), 
        h.tag("a", i18n.format_number(c.next_limit), "href", c.next_limit_url))}<br/>
      </acre:block>
      <acre:block else="">
        ${h.bless_sprintf(_("set to %s"), 
        h.tag("a", i18n.format_number(c.next_limit), "href", c.next_limit_url))}<br/>
      </acre:block>
    </div>
  </div>
  
  <div class="page-meta">
    <h1>Current Language Name Goes Here XXX</h1>
    <div class="meta">
      <span class="key">
        <strong>id:</strong>
        ${c.topic["primary:id"]}
      </span>
      <span class="key">
        <strong>mid:</strong>
        ${c.topic.mid}
      </span>
      <span class="key">
        <strong>guid:</strong>
        ${c.topic.guid}
      </span>
    </div>
    <div class="admin-toolbox">
      <span class="creation-timestamp">
        <span class="user-image"></span>
        Created by
        <span acre:if="c.topic.creator">${a(c.topic.creator)}</span>
        <span acre:else="">null</span>
        <time title="${c.topic.timestamp}" class="published">${c.topic.timestamp}</time>
      </span>
    </div>
  </div>

      </tr>
    </tbody>
  </table>
  
  <acre:block if="c.names && c.names.length">
    <h2 class="table-title">${_("Names")} (${i18n.format_number(c.names.length)})</h2>
    <table class="table">
      <thead>
        <tr>
          <th class="column-header first">${_("value")}</th>
          <th class="column-header">${_("lang")}</th>
          <th class="column-header">${_("creator")}</th>
          <th class="column-header">${_("timestamp")}</th>
        </tr>
      </thead>
      <tbody>
        <tr class="hoverable" acre:for="name in c.names">
          <th class="odd row-header" scope="row">${name.value}</th>
          <td class="even">${a(name.lang)}</td>
          <td class="odd" acre:if="name.link.creator">${a(name.link.creator)}</td>
          <td class="odd" acre:else="">null</td>
          <td class="even">${name.link.timestamp}</td>
        </tr>
      </tbody>
    </table>
  </acre:block>

  <acre:block if="c.keys">
    <acre:block if="c.keys.outgoing && c.keys.outgoing.length">
      <h2 class="table-title">${_("Keys")} (${i18n.format_number(c.keys.outgoing.length)})</h2>
      <table class="table">
        <thead>
          <tr>
            <th class="column-header first">${_("namespace")}</th>
            <th class="column-header">${_("value")}</th>
            <th class="column-header">${_("creator")}</th>
            <th class="column-header">${_("timestamp")}</th>
          </tr>
        </thead>
        <tbody>
          <tr class="hoverable" acre:for="k in c.keys.outgoing">
            <th class="row-header odd" scope="row">${a(k.namespace)}</th>
            <td class="even">${k.value}</td>
            <td class="odd" acre:if="k.link.creator">${a(k.link.creator)}</td>
            <td class="odd" acre:else="">null</td>
            <td class="even">${k.link.timestamp}</td>
          </tr>
        </tbody>
      </table>
    </acre:block>

    <acre:block if="c.keys.incoming && c.keys.incoming.length">
      <h2 class="table-title">${_("Incoming Keys")} (${i18n.format_number(c.keys.incoming.length)})</h2>
      <table class="table">
        <thead>
          <tr>
            <th class="column-header first">${_("namespace")}</th>
            <th class="column-header">${_("value")}</th>
            <th class="column-header">${_("creator")}</th>
            <th class="column-header">${_("timestamp")}</th>
          </tr>
        </thead>
        <tbody>
          <tr class="hoverable" acre:for="k in c.keys.incoming">
            <th class="row-header odd" scope="row">${a(k.namespace)}</th>
            <td class="even">${k.value}</td>
            <td class="odd" acre:if="k.link.creator">${a(k.link.creator)}</td>
            <td class="odd" acre:else="">null</td>
            <td class="even">${k.link.timestamp}</td>
          </tr>
        </tbody>
      </table>
    </acre:block>
  </acre:block>

  <acre:block if="c.outgoing && c.outgoing.length">
    <h2 class="table-title">${_("Outgoing Properties")} (${i18n.format_number(c.outgoing.length)})</h2>
    <table class="table">
      <thead>
        <tr>
          <th class="column-header first">${_("subject")}</th>
          <th class="column-header">${_("predicate")}</th>
          <th class="column-header">${_("object")}</th>
          <th class="column-header">${_("creator")}</th>
          <th class="column-header numeric">${_("timestamp")}</th>
        </tr>
      </thead>
      <tbody>
        <tr class="hoverable" acre:for="o in c.outgoing">
          <th class="row-header odd" scope="row"><span class="self">-</span></th>
          <td class="even">${a(o.link.master_property)}</td>
          <td class="odd" acre:if="'value' in o">${literal(o)}</td>
          <td class="odd" acre:else="">${a(o.id)}</td>
          <td class="even" acre:if="o.link.creator">${a(o.link.creator)}</td>
          <td class="even" acre:else="">null</td>
          <td class="odd numeric">${o.link.timestamp}</td>
        </tr>
      </tbody>
    </table>
  </acre:block>

  <acre:block if="c.incoming && c.incoming.length">
    <h2 class="table-title">${_("Incoming Properties")} (${i18n.format_number(c.incoming.length)})</h2>
    <table class="table">
      <thead>
        <tr>
          <th class="column-header first">${_("subject")}</th>
          <th class="column-header">${_("predicate")}</th>
          <th class="column-header">${_("object")}</th>
          <th class="column-header">${_("creator")}</th>
          <th class="column-header numeric">${_("timestamp")}</th>
        </tr>
      </thead>
      <tbody>
        <tr class="hoverable" acre:for="o in c.incoming" >
          <th class="row-header odd" scope="row">${a(o.id)}</th>
          <td class="even">${a(o.link.master_property)}</td>
          <td class="odd"><span class="self">-</span></td>
          <td class="even" acre:if="o.link.creator">${a(o.link.creator)}</td>
          <td class="even" acre:else="">null</td>
          <td class="odd numeric">${o.link.timestamp}</td>
        </tr>
      </tbody>
    </table>
  </acre:block>

  <acre:block if="c.typelinks && c.typelinks.length">
    <h2 class="table-title">${_("Links using this property")} (${i18n.format_number(c.typelink.length)})</h2>
    <table class="table">
      <thead>
        <tr>
          <th class="column-header first">${_("subject")}</th>
          <th class="column-header">${_("predicate")}</th>
          <th class="column-header">${_("object")}</th>
          <th class="column-header">${_("creator")}</th>
          <th class="column-header">${_("timestamp")}</th>
        </tr>
      </thead>
      <tbody>
        <tr class="hoverable" acre:for="o in c.typelinks">
          <th class="row-header odd" scope="row">${a(o.source)}</th>
          <td class="even"><span class="self">-</span></td>
          <td class="odd" acre:if="o.target_value">${literal(o.target_value)}</td>
          <td class="odd" acre:else="">${a(o.target)}</td>
          <td class="even" acre:if="o.creator">${a(o.creator)}</td>
          <td class="even" acre:else="">null</td>
          <td class="odd numeric">${o.timestamp}</td>
        </tr>
      </tbody>
    </table>
  </acre:block>

</acre:block>

<acre:block def="footer_script()">
  <script src="${mf.js_src('index.mf.js')}"></script>
</acre:block>

<acre:block def="a(id, name, url, title)" trim="">
  <a href="${url || h.url_for('triples', null, null, id)}" title="${title || id}">${name || id}</a>
</acre:block>

<acre:block def="literal(o)" trim="">
  <span class="literal-value literal-value-${o.type.split('/').pop()}">${o.value}</span>
  <span class="literal-type">${a(o.type)}</span>
  <span acre:if="o.type === '/type/text'" class="literal-lang">${a(o.lang || o.link.target_value.lang)}</a>
</acre:block>
