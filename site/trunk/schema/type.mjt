<acre:script>
  var mf = acre.require("MANIFEST").MF;
  var c = this.exports.c = {};
  var h = mf.require("core", "helpers");
  var t = mf.require("templates");
  var image = mf.require("template", "imagecomponents");
  
  var id = acre.request.params.id || acre.request.path_info;
  
  var queries = mf.require("queries");
  var data = {
    "type" : queries.type(id)
  };
</acre:script>

<acre:block def="title()">
  $c.type.name <span class="type">type</span> <span class="type" acre:if="c.type.mediator">| mediator/CVT</span> <span acre:if="c.type.published" class="type">| ${c.type.published.name}</span><span class="type" acre:else>(no published info)</span>
  <span class="extends" acre:if="c.type.included_types.length > 0">extends</span>        
  <acre:block for="t in c.type.included_types">
    <span class="included_type"><a href="${h.url_for('schema', 'type', null, t.id)}">${t.name}</a> <span class="type">type</span> <span class="type" acre:if="t.mediator">| mediator/CVT</span> <span acre:if="t.published" class="type">| ${t.published.name}</span><span class="type" acre:else>(no published info)</span></span>
  </acre:block>
</acre:block>

<acre:block def="head()">
  <link rel="stylesheet" type="text/css" href="${mf.css_src('schema.mf.css')}" />
</acre:block>

<acre:block def="content_header()">
  <div class="page-header">
    <nav class="breadcrumb clear">
      <ol>
        <li class="breadcrumb-item"><a href="${h.url_for('schema')}">Schema Explorer</a></li>
        <li if="c.type.domain" class="breadcrumb-item"><a href="${h.url_for('schema', 'domain', null, c.type.domain.id)}">$c.type.domain.name</a></li>
        <li class="breadcrumb-item last"><a href="#">$c.type.name</a></li>
      </ol>
    </nav>
  </div>
</acre:block>

<acre:block def="content_body()">
  <acre:block if="c.type">
    <div class="page-meta">
      <h1>$c.type.name</h1>
      <div class="meta">
        <span class="key"><strong>Key:</strong> $c.type.id</span>
        <span class="display-type">
          <strong>Display:</strong>
          <span class="display-type" acre:if="c.type.cvt">Compound Value</span>
          <span class="display-type" acre:elif="c.type.enumeration">Enumerated</span>
          <span class="display-type" acre:else="">Standard</span>
        </span>
        <span class="included-types" acre:if="c.type.included_types.length > 0">
          <strong>Extends:</strong>
          <span acre:for="i, t in c.type.included_types" acre:trim=""><acre:block if="i">,</acre:block><a href="${h.url_for('schema', 'type', null, t.id )}">$t.name</a></span>
        </span>
      </div>
      <span class="creation-timestamp">
        ${image.user_image_small(c.type.creator)}
        Created by <a href="${acre.freebase.service_url}/view${c.type.creator.id}" title="View user profile">$c.type.creator.name</a> 
        on <time class="published" datetime="${c.type.timestamp}">$c.type.date</time>
      </span>    
      <div id="description" acre:if="c.type.description">
        <p>${acre.markup.bless(c.type.description)}</p>
      </div>
      <div class="nav clear">
        <ul class="nav-mode">
          <li><a href="#" class="current">Table</a></li>
          <li><a href="#">Diagram</a></li>
        </ul>
        <ul class="nav-utilities">
          <li>
            <a acre:if="c.type.instances" href="${h.freebase_url('/view'+id)}" class="icon-link"><span class="browse-icon">Browse <strong>${c.type.instances}</strong> Instances</span></a>
          </li>
          <li>
            <a href="$c.type.query_url" class="icon-link"><span class="query-icon">Build Query</span></a>
          </li>
          <li>
            <a href="${h.freebase_url('/type/schema'+id)}" class="icon-link"><span class="edit-icon">Edit Schema</span></a>
          </li>
        </ul>
      </div>
    </div>
        
      <acre:block if="c.type.properties.length > 0">
        <div class="section">
          <h2 class="table-title">Properties</h2>
          <table class="table" cellspacing="0">
            <thead>
              <tr>
                <th class="column-header">Property</th>
                <th class="column-header">ID</th>
                <th class="column-header">Expected Type</th>
                <th class="column-header description">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr acre:for="prop in c.type.properties" class="hoverable">
                <th scope="row" class="row-header odd">
                  <a href="${h.url_for('schema', 'property', null, prop.id)}">$prop.name</a>
                  <a href="javascript:void(0);" class="row-menu-trigger">+</a>
                  <ul class="row-menu tooltip">
                    <li class="row-menu-item"><a href="${h.url_for('schema', 'property', null, prop.id)}">View property details</a></li>
                    <li class="row-menu-item"><a href="${h.freebase_url('/view'+prop.expected_type.id)}">Browse instances</a></li>
                    <li class="row-menu-item last"><a href="#">Build query</a></li>
                  </div>
                </th>
                <td class="even">$prop.id</td>
                <td class="odd">
                  <a href="${h.url_for('schema', 'type', null, prop.expected_type.id)}">
                    $prop.expected_type.id
                  </a>
                  <span acre:if="prop.unit">$prop.unit.name</span>
                  <span acre:if="prop.master_property || prop.reverse_property" style="display:none">
                    <acre:script>
                      var other_property = prop.master_property || prop.reverse_property;
                    </acre:script>
                    $prop.name has a return link of
                    $other_property.name
                    from $other_property.schema.name
                    
                  </span>
                </td>
                <td class="even description">
                  <p acre:if="prop['/freebase/documented_object/tip']">${prop['/freebase/documented_object/tip']}</p>
                  <span class="property-meta">
                    <span acre:if="prop.master_property === null">master</span>
                    <span acre:else="">reverse</span>
                    <span acre:if="prop.unique">unique</span>
                    <span acre:if="prop['/freebase/property_hints/disambiguator']">disambiguating</span>
                    <span acre:if="prop['/freebase/property_hints/display_none']">hidden</span>                  
                  </span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </acre:block>
      <acre:block else="">
        <h2>Type has no properties</h2>
      </acre:block>
    
      <acre:script>
      </acre:script>
      <acre:block if="c.type.included_types">
        <div class="section">
          <h2 class="table-title">Included Types</h2>
          <table class="table" cellspacing="0" id="included-types-table">
            <acre:block for="t in c.type.included_types">
              <acre:script>
                var class_name = "included-type" + t.id.replace(/\//g, "-");
              </acre:script>
              <thead>
                <tr>
                  <th class="tbody-header" colspan="4" data-target="$class_name">
                    <span class="tbody-header-title">$t.name</span> <span class="key">$t.id</span>
                  </th>
                </tr>
              </thead>
              <tbody class="$class_name">
                <tr>
                  <th class="column-header">Property</th>
                  <th class="column-header">ID</th>
                  <th class="column-header">Expected Type</th>
                  <th class="column-header description">Description</th>
                </tr>
                <tr acre:for="prop in t.properties" class="included-property hoverable">
                  <th scope="row" class="odd row-header">$prop.name</th>
                  <td class="even"><a href="${h.url_for('schema', 'property', null, prop.id)}">$prop.id</a></td>
                  <td class="odd">
                    <a href="${h.url_for('schema', 'type', null, prop.expected_type.id)}">$prop.expected_type.id</a>
                    <span acre:if="prop.unit">$prop.unit.name</span>
                  </td>
                  <td class="even description">
                    <p acre:if="prop['/freebase/documented_object/tip']">${prop['/freebase/documented_object/tip']}</p>                 
                    <span acre:if="prop.master_property === null">master</span>
                    <span acre:else="">reverse</span>
                    <span acre:if="prop.unique">,unique</span>
                    <span acre:if="prop['/freebase/property_hints/disambiguator']">,disambiguating</span>
                    <span acre:if="prop['/freebase/property_hints/display_none']">,hidden</span>
                  </td>
                </tr>
              </tbody>           
            </acre:block>
          </table>
        </div>
      </acre:block>
      <acre:block else="">
        <h2>Type has no inherited properties</h2>
      </acre:block>
    
      <acre:block if="c.type.incoming_properties">
        <div class="section">
          <h2 class="table-title">
            Incoming Properties
          </h2>
          <table class="table" cellspacing="0" id="incoming-properties-table">
            <acre:block if="c.type.incoming_properties.same.properties.length > 0">
              ${t.incoming_props_group(c.type.incoming_properties.same, expanded=true)}
            </acre:block>
            <acre:block if="c.type.incoming_properties.commons.properties.length > 0">
              ${t.incoming_props_group(c.type.incoming_properties.commons)}
            </acre:block>
            <acre:block if="c.type.incoming_properties.same.properties.length > 0">
              ${t.incoming_props_group(c.type.incoming_properties.bases)}
            </acre:block>
          </table>
        </div>
      </acre:block>
      <acre:block else="">
        <h2>No incoming links</h2>
      </acre:block>
    
  </acre:block>
  <acre:block elif="id == ''">
    <div id="error">Need to specify the <em>id</em> parameter</div>
  </acre:block>
  <acre:block elif="id.charAt(0) != '/'">
    <div id="error"><em>${id}</em> is not a type ID</div>
  </acre:block>
  <acre:block else="">
    <div id="error">No type found for <em>$id</em></div>
  </acre:block>
  
</acre:block>

<acre:block def="footer_script()">
  <script src="${mf.js_src('schema.mf.js')}"></script>
</acre:block>

${mf.require("template", "renderer").render_page(data, this.exports)}
