

/* suppress.js */
window.__cuecard_suppress_loading=true;


/* cuecard-api.js */
if(!("CueCard" in window)){(function(){var B="1.3.4";
var E="http://r"+B.replace(/\./g,"-")+".cuecard.dfhuynh.user.dev.freebaseapps.com/";
window.CueCard={loaded:false,version:B,loadingScriptsCount:0,error:null,helper:E,apiProxy:{base:E,read:"mqlread?",write:"mqlwrite?"},freebaseServiceUrl:"http://www.freebase.com/",params:{bundle:true,externals:true}};
var H=function(I){return I.getElementsByTagName("head")[0];
};
CueCard.findScript=function(O,K){var N=O.documentElement.getElementsByTagName("head");
for(var L=0;
L<N.length;
L++){var M=N[L].firstChild;
while(M!=null){if(M.nodeType==1&&M.tagName.toLowerCase()=="script"){var I=M.src;
var J=I.indexOf(K);
if(J>=0){return I;
}}M=M.nextSibling;
}}return null;
};
CueCard.includeJavascriptFile=function(N,K,I,O){I=I||"";
if(N.body==null){try{var L="'"+I.replace(/'/g,"&apos")+"'";
N.write("<script src='"+K+"' onerror="+L+(O?" charset='"+O+"'":"")+" type='text/javascript'>"+I+"<\/script>");
return ;
}catch(M){}}var J=N.createElement("script");
if(I){try{J.innerHTML=I;
}catch(M){}J.setAttribute("onerror",I);
}if(O){J.setAttribute("charset",O);
}J.type="text/javascript";
J.language="JavaScript";
J.src=K;
return H(N).appendChild(J);
};
CueCard.includeJavascriptFiles=function(L,I,K){for(var J=0;
J<K.length;
J++){CueCard.includeJavascriptFile(L,I+K[J]);
}CueCard.loadingScriptsCount+=K.length;
};
CueCard.includeCssFile=function(L,I){if(L.body==null){try{L.write("<link rel='stylesheet' href='"+I+"' type='text/css'/>");
return ;
}catch(K){}}var J=L.createElement("link");
J.setAttribute("rel","stylesheet");
J.setAttribute("type","text/css");
J.setAttribute("href",I);
H(L).appendChild(J);
};
CueCard.includeCssFiles=function(L,I,K){for(var J=0;
J<K.length;
J++){CueCard.includeCssFile(L,I+K[J]);
}};
CueCard.parseURLParameters=function(L,U,R){U=U||{};
R=R||{};
if(typeof L=="undefined"){L=location.href;
}var K=L.indexOf("?");
if(K<0){return U;
}L=(L+"#").slice(K+1,L.indexOf("#"));
var O=L.split("&"),N,T={};
var I=window.decodeURIComponent||unescape;
for(var Q=0;
N=O[Q];
Q++){var V=N.indexOf("=");
var J=I(N.slice(0,V).replace(/\+/g," "));
var M=T[J];
if(typeof M=="undefined"){M=[];
}else{if(!(M instanceof Array)){M=[M];
}}T[J]=M.concat(I(N.slice(V+1).replace(/\+/g," ")));
}for(var Q in T){if(!T.hasOwnProperty(Q)){continue;
}var S=R[Q]||String;
var P=T[Q];
if(!(P instanceof Array)){P=[P];
}if(S===Boolean&&P[0]=="false"){U[Q]=false;
}else{U[Q]=S.apply(this,P);
}}return U;
};
if(typeof CueCard_urlPrefix=="string"){CueCard.urlPrefix=CueCard_urlPrefix;
}else{var C=CueCard.findScript(document,"cuecard-api.js");
if(C==null){CueCard.error=new Error("Failed to derive URL prefix for CueCard API code files");
return ;
}CueCard.urlPrefix=C.substr(0,C.indexOf("cuecard-api.js"));
}CueCard.parseURLParameters(C,CueCard.params,{bundle:Boolean,externals:Boolean});
CueCard.externalPrefix=CueCard.urlPrefix+"external/";
CueCard.codemirrorPrefix=CueCard.externalPrefix+"CodeMirror/";
CueCard.jqueryuiPrefix=CueCard.externalPrefix+"jquery-ui/";
if(!(window.__cuecard_suppress_loading)){var G=["http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js",CueCard.jqueryuiPrefix+"jquery-ui-1.7.1.custom.min.js",CueCard.codemirrorPrefix+"js/codemirror.js",CueCard.externalPrefix+"json2.js",CueCard.externalPrefix+"jquery.cookie.js"];
var F=["cuecard.js","mql-syntax.js","indent-writer.js","jsonize.js","queue.js","query-parser.js","query-model.js","ui.js","popup.js","topic-suggestors.js","static-choices-suggestor.js","property-suggestor.js","type-suggestor.js","suggestion-controller.js","query-editor.js","output-pane.js","control-pane.js","code-generation.js","example-dialog.js","examples.js","languages.js","x-metaweb-costs.js"];
var D=[CueCard.jqueryuiPrefix+"theme/jquery-ui-1.7.1.custom.css"];
var A=["cuecard.css","query-editor.css","popup.css","suggestion.css","output-pane.css","control-pane.css","example-dialog.css"];
if(CueCard.params.externals){CueCard.includeJavascriptFiles(document,"",G);
CueCard.includeCssFiles(document,"",D);
}if(CueCard.params.bundle){CueCard.includeJavascriptFiles(document,CueCard.urlPrefix,["cuecard-bundle.js"]);
CueCard.includeCssFiles(document,CueCard.urlPrefix,["cuecard-bundle.css"]);
}else{CueCard.includeJavascriptFiles(document,CueCard.urlPrefix+"scripts/",F);
CueCard.includeCssFiles(document,CueCard.urlPrefix+"styles/",A);
}}CueCard.loaded=true;
})();
}

/* cuecard-bundle.js */
CueCard.CodeGeneration={serializers:{}};
CueCard.CodeGeneration.generate=function(M,R,P){var O="";
var Q={_variables:{},createVariable:function(A){if(A in this._variables){return A+this._variables[A]++;
}else{this._variables[A]=1;
return A;
}}};
var S=Q.createVariable("q");
var N=Q.createVariable("o");
var L=new CueCard.SerializingContext(null);
L.setProperty("indentString","indentString" in P?P.indentString:"  ");
L.setProperty("indentLevel","indentLevel" in P?P.indentLevel:0);
L.setProperty("stream",{append:function(A){O+=A;
}});
R.prepareRootContext(L,P);
var K=new CueCard.IndentWriter(L);
var T=R.generateQueryCall(L,K,Q,M,P.variables,S,N);
L.setProperty("start",function(){return T;
});
L.setProperty("stop",function(){});
CueCard.CodeGeneration._processNode(M,R,L,K,Q);
return O;
};
CueCard.CodeGeneration._deriveElementName=function(G,H){if(G==null){var F=H.getProperty("path");
if(F!=null){if(F.charAt(0)=="!"){var E=F.substr(Math.max(F.indexOf(":")+1,1)).split("/");
return E[Math.max(0,E.length-2)];
}else{var E=F.substr(F.indexOf(":")+1).split("/");
return E[E.length-1];
}}}else{var E=G.split("/");
return E[E.length-1];
}return"entry";
};
CueCard.CodeGeneration._isImagePath=function(B){if(B.charAt(0)=="!"){return false;
}B=B.substr(B.indexOf(":")+1);
return B=="/common/topic/image"||B=="image";
};
CueCard.CodeGeneration._isImageNode=function(C){if(C==null||typeof C!="object"){return false;
}if(C instanceof Array){if(C.length==1&&typeof C[0]=="object"){C=C[0];
}else{return false;
}}for(var D in C){if(D!="id"&&D!="guid"&&!CueCard.QueryNode.isMqlKeyword(D)){return false;
}}return true;
};
CueCard.CodeGeneration._processNode=function(P,Y,S,d,W){if(P==null){var X=S.getProperty("start")(true,false);
Y.outputSimpleFieldValue(X,S,d);
S.getProperty("stop")(true,false);
}else{if(typeof P!="object"){return ;
}else{if(P instanceof Array){if(P.length==0){var T=CueCard.CodeGeneration._deriveElementName(null,S);
var c=W.createVariable(T);
var b=W.createVariable(T.charAt(0));
var X=S.getProperty("start")(false,false);
Y.openNodeArray(S,d,W,X,c,b,"values");
Y.outputSimpleFieldValue(c,S,d);
Y.closeNodeArray(S,d,W,X,c,b,"values");
S.getProperty("stop")(false,false);
}else{if(P.length>1||typeof P[0]!="object"||"__identifier__" in P){return ;
}else{var Q=new CueCard.SerializingContext(S);
Q.setProperty("in-array",true);
arguments.callee(P[0],Y,Q,d,W);
}}}else{if(P["optional"]!="forbidden"){var Z=null;
var U=0;
for(var R in P){if(P.hasOwnProperty(R)&&R!="*"&&!CueCard.QueryNode.isMqlKeyword(R)){U++;
var V=P[R];
if(R.charAt(0)!="!"){var a=R.substr(R.indexOf(":")+1);
if(a=="type"||a=="/type/object/type"){if(V!=null&&typeof V=="string"){Z=V;
}}}}}CueCard.CodeGeneration._processTypedObjectNode(P,Z,U,Y,S,d,W);
}}}}};
CueCard.CodeGeneration._processTypedObjectNode=function(b,h,S,W,i,Y,V){var j=null;
var f=null;
var T=null;
var g,Z;
var U=("optional" in b&&b.optional===true);
function X(){var A=CueCard.CodeGeneration._deriveElementName(h,i);
f=V.createVariable(A);
if(i.getProperty("in-array")){T=V.createVariable(A.charAt(0));
}}if(i.getProperty("in-array")){var d=(S>0&&!("*" in b));
var g=function(){if(j==null){j=i.getProperty("start")(false,U);
X();
W.openNodeArray(i,Y,V,j,f,T,d?"fields":"object");
}return f;
};
var Z=function(){if(j!=null){W.closeNodeArray(i,Y,V,j,f,T,d?"fields":"object");
i.getProperty("stop")(false,U);
}};
}else{var g=function(){if(j==null){j=i.getProperty("start")(false,U);
X();
W.openNode(i,Y,V,j,f);
}return f;
};
var Z=function(){if(j!=null){W.closeNode(i,Y,V,j,f);
i.getProperty("stop")(false,U);
}};
}if(S==0||"*" in b){W.generateEmptyObjectNode(i,Y,V,g());
}else{for(var c in b){if(b.hasOwnProperty(c)&&c!="*"&&!CueCard.QueryNode.isMqlKeyword(c)){var e=b[c];
if(CueCard.CodeGeneration._isImagePath(c)&&CueCard.CodeGeneration._isImageNode(e)){W.generateImageField(i,Y,V,c,e,g);
}else{var a=W.createFieldContext(i,Y,V,c,g);
a.setProperty("path",c);
CueCard.CodeGeneration._processNode(e,W,a,Y,V);
}}}if("*" in b){var e=b["*"];
var a=W.openWildcardField(i,Y,V,g,e);
CueCard.CodeGeneration._processNode(e,W,a,Y,V);
W.closeWildcardField(i,Y,V,g,e);
}}Z();
};
CueCard.CodeGeneration.serializers["acre-template"]={prepareRootContext:function(D,C){},generateQueryCall:function(M,J,N,K,I,H,L){J.appendIndent();
J.append("<acre:script>");
J.appendLineBreak();
J.indent();
J.appendIndent();
J.append("var "+H+" = ");
CueCard.jsonize(K,{context:M,variables:I,resolveVariables:false});
J.append(";");
J.appendLineBreak();
J.appendIndent();
J.appendLineBreak();
J.appendIndent();
J.append("var "+L+" = acre.freebase.mqlread("+H+");");
J.appendLineBreak();
J.unindent();
J.appendIndent();
J.append("</acre:script>");
J.appendLineBreak();
return L+".result";
},outputSimpleFieldValue:function(E,D,F){F.append("${"+E+"}");
},openNodeArray:function(M,K,N,J,L,H,I){K.appendLineBreak();
K.appendIndent();
K.append('<ul acre:if="'+J+'.length != 0">');
K.appendLineBreak();
K.indent();
K.appendIndent();
K.append('<li acre:for="'+H+", "+L+" in "+J+'">');
if(I=="fields"){K.append("<table>");
}if(I=="fields"||I=="object"){K.appendLineBreak();
K.indent();
}},closeNodeArray:function(M,K,N,J,L,H,I){if(I=="fields"||I=="object"){K.unindent();
K.appendIndent();
}if(I=="fields"){K.append("</table>");
}K.append("</li>");
K.appendLineBreak();
K.unindent();
K.appendIndent();
K.append("</ul>");
K.appendLineBreak();
K.appendIndent();
K.append('<div acre:else=""><ins>[no element]</ins></div>');
K.appendLineBreak();
K.appendLineBreak();
},openNode:function(J,H,F,G,I){H.appendIndent();
H.append("<acre:script>var "+I+" = "+G+";</acre:script>");
H.appendLineBreak();
H.appendIndent();
H.append("<table>");
H.appendLineBreak();
H.indent();
},closeNode:function(J,H,F,G,I){H.unindent();
H.appendIndent();
H.append("</table>");
H.appendLineBreak();
},createFieldContext:function(K,J,G,L,H){var I=new CueCard.SerializingContext(K);
I.setProperty("in-array",false);
I.setProperty("start",function(A,B){var C=H();
J.appendIndent();
J.append("<tr><th>"+L+":</th>");
J.appendLineBreak();
J.indent();
J.appendIndent();
J.append("<td"+(B?" acre:if=\"'"+L+"' in "+C+" && "+C+"['"+L+"'] != null\"":"")+">");
if(!A){J.appendLineBreak();
J.indent();
}return C+"['"+L+"']";
});
I.setProperty("stop",function(A,B){if(!A){J.unindent();
J.appendIndent();
}J.append("</td>");
J.appendLineBreak();
if(B){J.appendIndent();
J.append('<td acre:else=""><ins>[no value]</ins></td>');
J.appendLineBreak();
}J.unindent();
J.appendIndent();
J.append("</tr>");
J.appendLineBreak();
});
return I;
},generateImageField:function(M,X,S,T,R,N){var O=N();
var U=O+"['"+T+"']";
X.appendIndent();
X.append("<tr><th>"+T+":</th>");
X.appendLineBreak();
X.indent();
X.appendIndent();
X.append("<td acre:if=\"'"+T+"' in "+O+" && "+U+' != null">');
X.appendLineBreak();
X.indent();
var Q=(R instanceof Array);
X.appendIndent();
if(Q){R=R[0];
var P=S.createVariable("image");
var V=S.createVariable("i");
var W=("guid" in R)?("/guid/${"+P+".guid.substr(1)}"):("${"+P+".id}");
X.append('<img acre:for="'+V+", "+P+" in "+U+'" src="${acre.environ.freebase_service_url}/api/trans/image_thumb'+W+'?mode=fillcrop&amp;maxwidth=100&amp;maxheight=100" /></td>');
}else{var W=("guid" in R)?("/guid/${"+U+".guid.substr(1)}"):("${"+U+".id}");
X.append('<img src="${acre.environ.freebase_service_url}/api/trans/image_thumb'+W+'?mode=fillcrop&amp;maxwidth=100&amp;maxheight=100" /></td>');
}X.appendLineBreak();
X.unindent();
X.appendIndent();
X.append('<td acre:else=""><ins>[no image]</ins></td>');
X.appendLineBreak();
X.unindent();
X.appendIndent();
X.append("</tr>");
X.appendLineBreak();
},openWildcardField:function(K,R,Q,L,O){var M=L();
var T=Q.createVariable("field");
var N=Q.createVariable("value");
R.appendIndent();
R.append('<tr acre:for="'+T+", "+N+" in "+M+'"><td>${'+T+"}:</td>");
R.appendLineBreak();
R.indent();
var P=N;
var S=new CueCard.SerializingContext(K);
S.setProperty("in-array",false);
S.setProperty("start",function(A,B){R.appendIndent();
R.append("<td>");
if(!A){R.appendLineBreak();
R.indent();
}return P;
});
S.setProperty("stop",function(A,B){if(!A){R.unindent();
R.appendIndent();
}R.append("</td>");
R.appendLineBreak();
});
return S;
},closeWildcardField:function(I,H,J,G,F){H.unindent();
H.appendIndent();
H.append("</tr>");
H.appendLineBreak();
},generateEmptyObjectNode:function(M,K,N,J){var H=N.createVariable("field");
var L=N.createVariable("value");
K.appendIndent();
K.append("<table>");
K.appendLineBreak();
K.indent();
var I=L;
K.appendIndent();
K.append('<tr acre:for="'+H+", "+L+" in "+J+'"><th>${'+H+"}:</th>");
K.appendLineBreak();
K.indent();
K.appendIndent();
K.append('<td acre:if="'+I+' instanceof Array">${'+I+".join(', ')}</td>");
K.appendLineBreak();
K.appendIndent();
K.append('<td acre:else="">${'+I+"}</td>");
K.appendLineBreak();
K.unindent();
K.appendIndent();
K.append("</tr>");
K.appendLineBreak();
K.unindent();
K.appendIndent();
K.append("</table>");
K.appendLineBreak();
}};
CueCard.ControlPane=function(D,C){this._elmt=$(D);
this._options=C||{};
this._constructUI();
this.layout();
};
CueCard.ControlPane.prototype.dispose=function(){};
CueCard.ControlPane.prototype.layout=function(){var B=(this._elmt[0].firstChild.offsetHeight-this._elmt[0].firstChild.firstChild.firstChild.offsetHeight-28)+"px";
this._elmt.find(".cuecard-controlPane-tabBody").css("height",B);
};
CueCard.ControlPane.prototype._constructUI=function(){var G=this._idPrefix="t"+Math.floor(1000000*Math.random());
function H(A,B){return'<li class="tab"><a href="#'+G+"-"+A+'"><span>'+B+"</span></a></li>";
}function E(A){return'<div class="cuecard-controlPane-tabBody" id="'+G+"-"+A+'"></div>';
}this._elmt.html('<div class="cuecard-controlPane"><div id="'+G+'"><ul>'+H(0,"Tools")+H(1,"Variables")+H(2,"Envelope")+H(3,"Custom Envelope")+H(4,"Settings")+'</ul><div class="tabbed-content">'+E(0)+E(1)+E(2)+E(3)+E(4)+"</div></div></div>");
$("#"+G).tabs();
var F=this._elmt.find(".cuecard-controlPane-tabBody");
this._toolsTabBody=$(F[0]);
this._variablesTabBody=$(F[1]);
this._envelopeTabBody=$(F[2]);
this._customEnvelopeTabBody=$(F[3]);
this._settingsTabBody=$(F[4]);
this._constructToolsTabBody();
this._constructVariablesTabBody();
this._constructEnvelopeTabBody();
this._constructCustomEnvelopeTabBody();
this._constructSettingsTabBody();
};
CueCard.ControlPane.prototype._constructToolsTabBody=function(){var E="r"+Math.floor(1000000*Math.random());
var D=this;
var F=function(A,C,B){return'<div class="cuecard-controlPane-powerTool"><button cc:command="'+A+'">'+C+'</button><div class="cuecard-controlPane-powerTool-hint">'+B+"</div></div>";
};
this._toolsTabBody.html('<div class="cuecard-controlPane-section"><table><tr valign="top"><td>'+F("qualify","Qualify All Properties",'Expand all properties to their full IDs (e.g., "id" &rarr; "/type/object/id").')+F("redangle","Turn Inside Out","Take the inner most query node {...} that contains the text cursor and make it the outermost query node.")+F("generate","Generate Acre Template","Generate an ACRE template that can render the result of this query.")+F("one-liner","One-liner","Reformat query into a one-liner.")+'</td><td width="40%">Results of tools<br/><input type="radio" name="'+E+'" value="replace" checked="true"> replace query (undo-able)<br/><input type="radio" name="'+E+'" value="output"> go into output pane</td></tr></table></div>');
this._toolsTabBody.find("button").click(function(A){return D._onCommandClick(A,this,this.getAttribute("cc:command"));
});
};
CueCard.ControlPane.prototype._constructVariablesTabBody=function(){this._variablesTabBody.html('<table class="cuecard-controlPane-variables"><tr><th width="30%">name</th><th width="50%">value</th><th></th></tr></table><div><button>Add</button></div>');
var C=this;
var D=function(J){var B=C._variablesTabBody.find("table")[0];
var A=B.insertRow(B.rows.length);
var I=A.insertCell(0);
I.innerHTML="<input />";
var K=A.insertCell(1);
K.innerHTML="<input />";
var L=A.insertCell(2);
L.innerHTML="<button>Remove</button>";
$(L.firstChild).click(function(){$(A).remove();
});
if(!(J)){I.firstChild.focus();
}};
this._variablesTabBody.find("button").click(D);
D(true);
};
CueCard.ControlPane.prototype._constructEnvelopeTabBody=function(){var L=function(B,C,A){return"<tr><td>"+B+"</td><td>"+C+(A.length>0?('<div class="cuecard-controlPane-hint">'+A+"</div>"):"")+"</td></tr>";
};
var P=['<option value="">--</option>'];
for(var J=0;
J<CueCard.Languages.length;
J++){var K=CueCard.Languages[J];
P.push('<option value="'+K.id+'">'+K.name+" ("+K.id+")</option>");
}this._envelopeExtendedID="i"+Math.floor(1000000*Math.random());
this._envelopeAsOfTimeID="i"+Math.floor(1000000*Math.random());
this._envelopeUsePermissionOfID="i"+Math.floor(1000000*Math.random());
this._envelopeCursorID="i"+Math.floor(1000000*Math.random());
this._envelopePageID="i"+Math.floor(1000000*Math.random());
var Q="env" in this._options?this._options.env:{};
var R=("extended" in this._options?(this._options.extended==1):false)||("extended" in Q?Q.extended==1:false);
var N="as_of_time" in this._options?this._options.as_of_time:("as_of_time" in Q?Q.as_of_time:null);
var M="use_permission_of" in this._options?this._options.use_permission_of:("use_permission_of" in Q?Q.use_permission_of:null);
delete Q["extended"];
delete Q["as_of_time"];
delete Q["use_permission_of"];
this._envelopeTabBody.html('<div class="cuecard-controlPane-explanation">The query envelope contains directives to the query engine, specifying how to execute the query or how to return the results.</div><table class="cuecard-controlPane-configurations">'+L("extended",'<input type="checkbox" name="'+this._envelopeExtendedID+'" '+(R?"checked":"")+"/>","Enable MQL extensions")+L("as_of_time",'<input name="'+this._envelopeAsOfTimeID+'" '+(N!=null?'value="'+N+'"':"")+"/>","Resolve the query based on data in Freebase as of the given time in ISO8601 format, e.g., 2009-02-28, 2009-03-13T22:16:40")+L("use_permission_of",'<input name="'+this._envelopeUsePermissionOfID+'" '+(M!=null?'value="'+M+'"':"")+"/>",'Specify the id of an object (typically a user, domain or type) whose permission you want to copy (<a href="http://freebaseapps.com/docs/mql/ch06.html#id2972357" target="_blank">more details</a>).')+L("page",'<input name="'+this._envelopePageID+'" /> <button class="cuecard-controlPane-configurations-page">Previous</button><button class="cuecard-controlPane-configurations-page">Next</button>','Page number starting from 1 if there is a "limit" property in the top level query node.')+L("cursor",'<div><input type="radio" name="'+this._envelopeCursorID+'" checked value=""> unspecified (return all results, possibly time-out)</div><div><input type="radio" name="'+this._envelopeCursorID+'" value="true"> true (start pagination with page size equal "limit" option in query)</div><div><input type="radio" name="'+this._envelopeCursorID+'" value="custom"> continue from cursor: <div class="cuecard-controlPane-configurations-cursor"><input type="text" name="'+this._envelopeCursorID+'" /><button class="cuecard-controlPane-configurations-cursor">Paste from Last Result</button> <button cc:run="true">Paste &amp; Run</button></div></div>',"")+L("lang",'<select class="cuecard-controlPane-configurations-languages">'+P.join("")+"</select>","Return text values in the given language (specified with the language's Freebase ID)")+L("escape",'<select><option value="">--</option><option value="html">html</option><option value="false">false</option></select>',"")+L("uniqueness_failure",'<select><option value="">--</option><option value="soft">soft</option></select>',"")+"</table>");
var O=this;
this._envelopeTabBody.find("input[type='text'][name='"+this._envelopeCursorID+"']").bind("change",function(){O._envelopeTabBody.find("input[type='radio'][value='custom']")[0].checked=true;
});
this._envelopeTabBody.find("button.cuecard-controlPane-configurations-cursor").click(function(){if(O._options.outputPane!=null){var A=O._options.outputPane.getJson();
if(A!==undefined&&A!==null&&"cursor" in A){O._envelopeTabBody.find("input[type='text'][name='"+O._envelopeCursorID+"']")[0].value=A.cursor;
O._envelopeTabBody.find("input[type='radio'][value='custom']")[0].checked=true;
if(O._options.queryEditor!=null&&this.getAttribute("cc:run")=="true"){O._options.queryEditor.run();
}}}});
this._envelopeTabBody.find("button.cuecard-controlPane-configurations-page").click(function(){var C=O._envelopeTabBody.find("input[type='text'][name='"+O._envelopePageID+"']")[0];
var D=C.value;
var B;
try{B=parseInt(D);
}catch(A){}if(typeof B!="number"||isNaN(B)){B=1;
}if(this.innerHTML=="Previous"){B--;
}else{B++;
}if(B<1){C.value="1";
return ;
}else{C.value=B;
if(O._options.queryEditor!=null){O._options.queryEditor.run();
}}});
};
CueCard.ControlPane.prototype._constructCustomEnvelopeTabBody=function(){var J="env" in this._options?this._options.env:{};
this._customEnvelopeTabBody.html('<table class="cuecard-controlPane-customEnvelope"><tr><th width="30%">name</th><th width="50%">value</th><th></th></tr></table><div><button>Add</button></div>');
var F=this;
var H=function(D,O,P){var B=F._customEnvelopeTabBody.find("table")[0];
var A=B.insertRow(B.rows.length);
var C=A.insertCell(0);
C.innerHTML="<input />";
if(O){C.firstChild.value=O;
}var E=A.insertCell(1);
E.innerHTML="<input />";
if(P){E.firstChild.value=P;
}var N=A.insertCell(2);
N.innerHTML="<button>Remove</button>";
$(N.firstChild).click(function(){$(A).remove();
});
if(!(D)){C.firstChild.focus();
}};
this._customEnvelopeTabBody.find("button").click(H);
var I=0;
for(var G in J){I++;
H(true,G,JSON.stringify(J[G]));
}if(I==0){H(true);
}};
CueCard.ControlPane.prototype._constructSettingsTabBody=function(){this._settingsTabBody.html('<div><input type="checkbox"'+($.cookie("cc_cp_clean")=="1"?" checked":"")+'> Always clean up query before running</div><div><input type="checkbox"'+($.cookie("cc_cp_align")=="0"?"":" checked")+'> Align JSON property values with spaces</div><div style="display: none;"><input type="checkbox"> Try running query as you edit</div><div><input type="checkbox"'+($.cookie("cc_cp_multi")=="0"?"":" checked")+"> Show error messages with multiple lines on multiple lines</div>");
};
CueCard.ControlPane.prototype._onCommandClick=function(D,F,E){switch(E){case"redangle":this._redangle();
break;
case"qualify":this._qualify();
break;
case"generate":this._generateCode();
break;
case"one-liner":this._oneLiner();
break;
}};
CueCard.ControlPane.prototype._redangle=function(){var F=this;
var D=this._options.queryEditor.getQueryModelAndContext();
var E=D.model;
E.toInsideOutQueryJson(D.context,CueCard.UI.createBlockingContinuations(function(B,A){F._setOutputJSON(A);
}));
};
CueCard.ControlPane.prototype._qualify=function(){var F=this;
var D=this._options.queryEditor.getQueryModelAndContext();
var E=D.model;
E.qualifyAllProperties(CueCard.UI.createBlockingContinuations(function(A){F._setOutputJSON(E.toQueryJson({qualifyAllProperties:true}));
}));
};
CueCard.ControlPane.prototype._generateCode=function(){var E=this._options.queryEditor.getQueryModelAndContext();
var F=E.model.toQueryJson();
var G=CueCard.CodeGeneration.generate(F,CueCard.CodeGeneration.serializers["acre-template"],{variables:this.getVariables()});
var H=$('<div title="Generated Acre Template"><textarea style="width: 100%; height: 100%; font-family: monospace; font-size: 12px;" wrap="off"></textarea></div>').appendTo(document.body);
H.find("textarea")[0].value=G;
H.find("textarea")[0].select();
H.dialog({modal:true,position:"center",width:800,height:500,buttons:{"OK":function(){H.dialog("close");
H.remove();
}}});
};
CueCard.ControlPane.prototype._oneLiner=function(){var E=this._options.queryEditor.getQueryModelAndContext();
var G=E.model.toQueryJson();
var F=this.getVariables();
var H=this.getJsonizingSettings({variables:F,resolveVariables:false});
H.breakLines=false;
this._options.queryEditor.content(CueCard.jsonize(G,H));
};
CueCard.ControlPane.prototype._setOutputJSON=function(B){switch(this._toolsTabBody.find("input:checked")[0].value){case"replace":this._options.queryEditor.content(CueCard.jsonize(B,this.getJsonizingSettings()));
break;
case"output":this._options.outputPane.setJSONContent(B,this.getJsonizingSettings());
break;
}};
CueCard.ControlPane.prototype.getQueryEnvelopeSetting=function(D){switch(D){case"extended":return this._envelopeTabBody.find("input[name='"+this._envelopeExtendedID+"']")[0].checked?1:0;
case"as_of_time":var C=this._envelopeTabBody.find("input[name='"+this._envelopeAsOfTimeID+"']")[0].value;
if(C.length>0){return C;
}break;
}return null;
};
CueCard.ControlPane.prototype.getQueryEnvelope=function(V,Q){V=V||{};
var N=this.getSetting("extended");
if(N==1){V.extended=1;
}var P=this._envelopeTabBody.find("input[name='"+this._envelopeAsOfTimeID+"']")[0].value;
if(P.length>0){V.as_of_time=P;
}var M=this._envelopeTabBody.find("input[name='"+this._envelopeUsePermissionOfID+"']")[0].value;
if(M.length>0){V.use_permission_of=M;
}var T=this._envelopeTabBody.find("select");
var S=function(A){return T[A].options[T[A].selectedIndex].value;
};
var O=S(0);
if(O.length>0){V.lang=O;
}var R=S(1);
if(R.length>0){V.escape=(R=="false")?false:R;
}var L=S(2);
if(L.length>0){V.uniqueness_failure=L;
}if(!(Q)){var U=this._envelopeTabBody.find("input[name='"+this._envelopePageID+"']")[0].value;
if(U.length>0){try{V.page=parseInt(U);
}catch(V){}}switch(this._envelopeTabBody.find("input[type='radio'][name='"+this._envelopeCursorID+"']:checked")[0].value){case"true":V.cursor=true;
break;
case"custom":V.cursor=this._envelopeTabBody.find("input[type='text'][name='"+this._envelopeCursorID+"']")[0].value;
break;
}}this.getCustomEnvelope(V);
return V;
};
CueCard.ControlPane.prototype.getCustomEnvelope=function(M){M=M||{};
var L=this._customEnvelopeTabBody.find("table")[0];
for(var N=1;
N<L.rows.length;
N++){var J=L.rows[N];
var H=J.cells[0].firstChild.value;
var K=J.cells[1].firstChild.value;
if(H.length>0){try{K=JSON.parse(K);
}catch(I){}M[H]=K;
}}return M;
};
CueCard.ControlPane.prototype.getSetting=function(H){var F=this._settingsTabBody.find("input");
switch(H){case"cleanup":var G=F[0].checked;
$.cookie("cc_cp_clean",G?"1":"0",{expires:365});
return G;
case"alignJSONPropertyValues":var G=F[1].checked;
$.cookie("cc_cp_align",G?"1":"0",{expires:365});
return G;
case"liveQuery":var G=F[2].checked;
$.cookie("cc_cp_live",G?"1":"0",{expires:365});
return G;
case"multilineErrorMessages":var G=F[3].checked;
$.cookie("cc_cp_multi",G?"1":"0",{expires:365});
return G;
case"extended":var E=this._envelopeTabBody.find("input[name='"+this._envelopeExtendedID+"']")[0].checked?1:0;
$.cookie("cc_cp_extended",E,{expires:365});
return E;
}return false;
};
CueCard.ControlPane.prototype.getJsonizingSettings=function(B){B=B||{};
B.indentCount=2;
B.alignFieldValues=this.getSetting("alignJSONPropertyValues");
return B;
};
CueCard.ControlPane.prototype.getVariables=function(){var L={};
var M=this._variablesTabBody.find("table")[0];
for(var N=1;
N<M.rows.length;
N++){var J=M.rows[N];
var H=J.cells[0].firstChild.value;
var K=J.cells[1].firstChild.value;
try{K=JSON.parse(K);
}catch(I){}L[H]=K;
}return L;
};
CueCard.createComposition=function(K){var L=new CueCard.QueryEditor(K.queryEditorElement,K["queryEditorOptions"]);
var H=null;
var J=null;
if("outputPaneElement" in K){var I=K["outputPaneOptions"]||{};
I.queryEditor=L;
H=new CueCard.OutputPane(K.outputPaneElement,I);
L.setOutputPane(H);
}if("controlPaneElement" in K){var G=K["controlPaneOptions"]||{};
G.queryEditor=L;
if(H!=null){G.outputPane=H;
}J=new CueCard.ControlPane(K.controlPaneElement,G);
L.setControlPane(J);
}return{queryEditor:L,outputPane:H,controlPane:J};
};
CueCard.ExampleDialog=function(B){this._options=B||{};
this._constructUI();
};
CueCard.ExampleDialog._dialog=null;
CueCard.ExampleDialog.prototype.dispose=function(){};
CueCard.ExampleDialog.prototype._constructUI=function(){if(CueCard.ExampleDialog._dialog==null){CueCard.ExampleDialog._dialog=$('<div id="cuecard-examples-dialog" title="Examples"><div class="cuecard-examples-dialog-columnHeader cuecard-examples-dialog-column-0">Techniques</div><div class="cuecard-examples-dialog-columnHeader cuecard-examples-dialog-column-1">Examples</div><div class="cuecard-examples-dialog-columnHeader cuecard-examples-dialog-column-2">Query</div><div class="cuecard-examples-dialog-columnBody cuecard-examples-dialog-column-0"></div><div class="cuecard-examples-dialog-columnBody cuecard-examples-dialog-column-1"></div><textarea class="cuecard-examples-dialog-columnBody cuecard-examples-dialog-column-2 cuecard-examples-query" readonly="true" wrap="off" /></div>').appendTo(document.body);
var R=CueCard.ExampleDialog._dialog.find("textarea")[0];
var L=CueCard.ExampleDialog._dialog.find(".cuecard-examples-dialog-columnBody");
var O=function(){var C=10;
var B=5;
var G=$("#cuecard-examples-dialog")[0];
var A=G.offsetHeight-35;
L.css("top","30px").css("height",A+"px");
var D=200;
var H=(G.offsetWidth-2*C-2*B)-D;
var E=Math.round(H*0.5);
var F=Math.round(H*0.5);
$(".cuecard-examples-dialog-column-0").css("left",C+"px").css("width",D+"px");
$(".cuecard-examples-dialog-column-1").css("left",(C+D+B)+"px").css("width",E+"px");
$(".cuecard-examples-dialog-column-2").css("left",(C+D+E+2*B)+"px").css("width",F+"px");
};
var U={"all":[]};
var S=function(){CueCard.ExampleDialog._dialog.find(".cuecard-examples-example").removeClass("cuecard-examples-example-selected");
};
var M=function(B,A){S();
$(B).addClass("cuecard-examples-example-selected");
R.value=CueCard.jsonize(CueCard.Examples[A].query,{indentCount:2});
};
var T=function(C,D){$('<a href="javascript:{}" class="cuecard-examples-example" id="cuecard-example-'+C+'">'+D.name+"</a>").click(function(){M(this,C);
}).appendTo(L[1]);
for(var A=0;
A<D.techniques.length;
A++){var B=D.techniques[A];
if(B in U){U[B].push(C);
}else{U[B]=[C];
}}};
CueCard.Examples.sort(function(B,A){return B.name.localeCompare(A.name);
});
for(var V=0;
V<CueCard.Examples.length;
V++){T(V,CueCard.Examples[V]);
}var N=function(D,C){CueCard.ExampleDialog._dialog.find(".cuecard-examples-technique").removeClass("cuecard-examples-technique-selected");
$(D).addClass("cuecard-examples-technique-selected");
if(C=="all"){CueCard.ExampleDialog._dialog.find(".cuecard-examples-example").show();
}else{CueCard.ExampleDialog._dialog.find(".cuecard-examples-example").hide();
var B=U[C];
for(var A=0;
A<B.length;
A++){$("#cuecard-example-"+B[A]).show();
}}S();
R.value="";
};
var P=function(A){$('<a href="javascript:{}" class="cuecard-examples-technique'+(A=="all"?" cuecard-examples-technique-selected":"")+'">'+A+" ("+(A=="all"?CueCard.Examples.length:U[A].length)+")</a>").click(function(){N(this,A);
}).appendTo(L[0]);
};
for(var V=0;
V<CueCard.ExampleTechniques.length;
V++){P(CueCard.ExampleTechniques[V]);
}$.ui.dialog.defaults.bgiframe=true;
CueCard.ExampleDialog._dialog.dialog({autoOpen:false,modal:true,resizable:true,position:"center",minWidth:800,minHeight:300,resize:O,open:O});
}var Q=this;
CueCard.ExampleDialog._dialog.dialog("option","width",$(window).width()-150).dialog("option","height",$(window).height()-200).dialog("option","buttons",{"Paste & Run":function(){$(this).dialog("close");
Q._options.onDone(CueCard.ExampleDialog._dialog.find("textarea")[0].value);
},"Cancel":function(){$(this).dialog("close");
}});
CueCard.ExampleDialog._dialog.dialog("open");
};
CueCard.ExampleTechniques=["all","basic","sorting","text search","range constraint","date query","multiple constraints on same property","limiting number of results","geographic location","compound value type (CVT)","schema inspection","attribution","adding data"];
CueCard.Examples=[{name:"Vietnamese restaurants in Aspen, Colorado",query:[{"/business/business_location/address":{"citytown":"Aspen","state_province_region":"Colorado"},"cuisine":"Vietnamese","name":null,"id":null,"type":"/dining/restaurant"}],techniques:["basic","geographic location"]},{name:"Properties of /music/artist",query:[{"id":"/music/artist","properties":[{}],"type":"/type/type"}],techniques:["schema inspection"]},{name:"All types created by the user jamie",query:[{"creator":"/user/jamie","name":null,"id":null,"type":"/type/type"}],techniques:["attribution"]},{name:"Cloud classifications sorted by name",query:[{"clouds":[],"name":null,"id":null,"sort":"name","type":"/meteorology/cloud_classification"}],techniques:["basic","sorting"]},{name:"U.S. states containing cities whose names start with 'Blue' or 'Red'",query:[{"a:contains":[{"name":null,"id":null,"name~=":"^Red","type":"/location/citytown"}],"b:contains":[{"name":null,"id":null,"name~=":"^Blue","type":"/location/citytown"}],"b:type":"/location/us_state","name":null,"id":null,"type":"/location/location"}],techniques:["text search","multiple constraints on same property"]},{name:"2 of The Police's albums and their tracks",query:{"album":[{"id":null,"limit":2,"name":null,"track":[]}],"id":null,"name":"The Police","type":"/music/artist"},techniques:["basic","limiting number of results"]},{name:"25 Songs with the word 'love' in their titles, with release date, album and artist",query:[{"album":{"artist":[],"name":null,"id":null,"release_date":null},"limit":25,"name":null,"name~=":"Love*","type":"/music/track"}],techniques:["text search","limiting number of results","date query"]},{name:"Films starring both Joe Pesci and Robert de Niro, showing their full cast",query:[{"a:starring":[{"actor":"Joe Pesci"}],"b:starring":[{"actor":"Robert de Niro"}],"name":null,"id":null,"starring":[{"actor":null}],"type":"/film/film"}],techniques:["multiple constraints on same property","compound value type (CVT)"]},{name:"32 actors born in the 1960s, with two films of each actor",query:[{"/people/person/date_of_birth":null,"/people/person/date_of_birth<":"1970","/people/person/date_of_birth>=":"1960","film":[{"film":null,"id":null,"limit":2}],"limit":35,"name":null,"id":null,"type":"/film/actor"}],techniques:["multiple constraints on same property","date query","limiting number of results","range constraint"]},{name:"Directors who have directed both Parker Posey and any actor named Robert (in possibly different films)",query:[{"a:film":[{"name":null,"id":null,"starring":{"actor":"Parker Posey"}}],"b:film":[{"name":null,"id":null,"starring":{"actor":null,"actor~=":"Robert*"}}],"name":null,"id":null,"type":"/film/director"}],techniques:["multiple constraints on same property","text search","compound value type (CVT)"]},{name:"Music artists with albums containing a track called 'One Tree Hill'",query:[{"album":[{"name":null,"id":null,"track":[{"length":null,"name":"One Tree Hill"}]}],"name":null,"id":null,"type":"/music/artist"}],techniques:["compound value type (CVT)","basic"]},{name:"Everything about 'Jimi Hendrix'",query:{"*":null,"name":"Jimi Hendrix","type":"/music/artist"},techniques:["basic"]},{name:"Kevin Bacon's films, with cast, producers, music, etc.",query:[{"film":[{"film":{"imdb_id":[],"music":[],"name":null,"id":null,"produced_by":[],"starring":[{"actor":[{}]}],"type":[]}}],"name":"Kevin Bacon","type":"/film/actor"}],techniques:["basic","compound value type (CVT)"]},{name:"When 'Star Wars Episode IV' was added to the database, and by whom",query:[{"creator":null,"id":"/wikipedia/en/Star_Wars_Episode_IV","name":null,"timestamp":null,"type":"/film/film"}],techniques:["attribution"]},{name:"Tracks on Synchronicity longer than 300 seconds",query:[{"artist":"The Police","name":"Synchronicity","track":[{"length":null,"length>":300,"name":null}],"type":"/music/album"}],techniques:["range constraint"]},{name:"Properties of a particular type (/government/politician)",query:{"id":"/government/politician","properties":[],"type":"/type/type"},techniques:["schema inspection"]},{name:"Properties of a particular property (/type/object/name)",query:{"*":null,"id":"/type/object/name","type":"/type/property"},techniques:["schema inspection"]},{name:"Types in a particular domain (/music)",query:{"id":"/music","type":"/type/domain","types":[]},techniques:["schema inspection"]},{name:"Creating a new topic given a name and a type",query:{"create":"unless_exists","name":"Test Object 1","type":"/base/mqlexamples/testobject","id":null,"guid":null},techniques:["adding data"]},{name:"Setting a basic unique property to a topic",query:{"name":"Test Object 1","type":"/base/mqlexamples/testobject","id":null,"basic_property":{"value":42,"connect":"update"}},techniques:["adding data"]},{name:"Connecting one topic to another",query:{"name":"Test Object 1","type":"/base/mqlexamples/testobject","id":null,"link_to_topic":{"name":"Test Object 2","type":"/base/mqlexamples/testobject","id":null,"connect":"insert"}},techniques:["adding data"]},{name:"Deleting a link between two topics",query:{"name":"Test Object 1","type":"/base/mqlexamples/testobject","id":null,"link_to_topic":{"name":"Test Object 2","type":"/base/mqlexamples/testobject","id":null,"connect":"delete"}},techniques:["adding data"]}];
CueCard.SerializingContext=function(B){this._parent=B;
this._root=(B==null)?this:B.getRoot();
this._properties={};
};
CueCard.SerializingContext.prototype={getProperty:function(B){return(B in this._properties)?this._properties[B]:(this._parent!=null?this._parent.getProperty(B):null);
},setProperty:function(C,D){this._properties[C]=D;
},getRoot:function(){return this._root;
},getRootProperty:function(B){return this.getRoot().getProperty(B);
},setRootProperty:function(C,D){return this.getRoot().setProperty(C,D);
},create:function(){return new SerializingContext(this);
}};
CueCard.IndentWriter=function(B){this._context=B;
this._stream=B.getProperty("stream");
};
CueCard.IndentWriter.prototype={appendLineBreak:function(){this._stream.append("\n");
},appendIndent:function(){var F=this._context.getRootProperty("indentLevel");
var E=this._context.getRootProperty("indentString");
for(var D=0;
D<F;
D++){this._stream.append(E);
}},indent:function(){this._context.setRootProperty("indentLevel",this._context.getRootProperty("indentLevel")+1);
},unindent:function(){this._context.setRootProperty("indentLevel",this._context.getRootProperty("indentLevel")-1);
},append:function(B){this._stream.append(B);
}};
(function(){var R={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"'":"\\'","\\":"\\\\"};
function J(A){if(/["\\\x00-\x1f]/.test(A)){return A.replace(/([\x00-\x1f\\"])/g,function(B,C){var D=R[C];
if(D){return D;
}D=C.charCodeAt();
return"\\u00"+Math.floor(D/16).toString(16)+(D%16).toString(16);
});
}else{return A;
}}function O(A){return A!=null&&typeof A=="object"&&!(A instanceof Array)&&!("__identifier__" in A);
}function K(A){return A!=null&&A instanceof Array;
}function M(B){for(var A in B){if(B.hasOwnProperty(A)){return true;
}}return false;
}function P(A){return A.length==0||(A.length==1&&O(A[0])&&!M(A[0]));
}var L=CueCard.jsonize=function(U,G){G=(G)?G:{};
var A="";
var F=("quoteAllFieldNames" in G)?G.quoteAllFieldNames:true;
var B=("variables" in G)?G.variables:{};
var I=("resolveVariables" in G)?G.resolveVariables:false;
if("context" in G){var V=new CueCard.SerializingContext(G.context);
}else{var E=("indentCount" in G)?G.indentCount:4;
var C="";
for(var D=0;
D<E;
D++){C+=" ";
}var V=new CueCard.SerializingContext(null);
V.setProperty("indentCount",E);
V.setProperty("indentString",C);
V.setProperty("indentLevel",0);
V.setProperty("stream",{append:function(S){A+=S;
}});
}V.setProperty("omitWhitespace",("omitWhitespace" in G)?G.omitWhitespace:false);
V.setProperty("maxFieldLength",("maxFieldLength" in G)?G.maxFieldLength:15);
V.setProperty("breakLines",("breakLines" in G)?G.breakLines:true);
V.setProperty("alignFieldValues",("alignFieldValues" in G)?G.alignFieldValues:true);
V.setProperty("collapseSingleObjectArray",("collapseSingleObjectArray" in G)?G.collapseSingleObjectArray:true);
V.setProperty("variables",B);
V.setProperty("resolveVariables",I);
V.setProperty("encodeJavascriptString",("encodeJavascriptString" in G)?G["encodeJavascriptString"]:J);
V.setRootProperty("fieldNameEncoder",{_m:{},encode:function(S){if(S in this._m){return this._m[S];
}else{var T=J(S);
this._m[S]=T=(F||/\W/.test(T))?('"'+T+'"'):T;
return T;
}}});
V.setProperty("path",[]);
V.setRootProperty("contextualize",("contextualize" in G)?G.contextualize:function(T,S){return T;
});
var H=new CueCard.IndentWriter(V);
L.converters["anything"](U,V,H);
return A;
};
L.converters={"anything":function(A,C,B){if(A==null){L.converters["null"](A,C,B);
}else{if(A instanceof Array){L.converters["array"](A,C,B);
}else{if(A instanceof Object){L.converters["object"](A,C,B);
}else{L.converters[typeof A](A,C,B);
}}}},"array":function(B,I,H){var C=I.getProperty("omitWhitespace");
var D=I.getProperty("breakLines");
if(B.length==0){H.append("[]");
return ;
}else{if(B.length==1){if(O(B[0])){if(M(B[0])){if(I.getProperty("collapseSingleObjectArray")){H.append("[");
var A=B[0];
L.converters["object"](A,I,H);
H.append("]");
return ;
}}else{H.append("[{}]");
return ;
}}}}H.append("[");
if(D){H.appendLineBreak();
H.indent();
}else{if(!C){H.append(" ");
}}var G=B.length;
for(var F=0;
F<G;
F++){var A=B[F];
var E=L.converters[A==null?"null":typeof A];
if(E){if(D){H.appendIndent();
}E(A,I,H);
if(F<G-1){H.append(",");
}if(D){H.appendLineBreak();
}else{if(!C){H.append(" ");
}}}}if(D){H.unindent();
H.appendIndent();
}H.append("]");
},"boolean":function(C,B,A){A.append(String(C));
},"null":function(C,B,A){A.append("null");
},"undefined":function(C,B,A){A.append("undefined");
},"number":function(C,B,A){A.append(isFinite(C)?String(C):"null");
},"object":function(I,h,l){if(I instanceof Array){L.converters["array"](I,h,l);
}else{if("__identifier__" in I){var g=I["__identifier__"];
var A=h.getProperty("resolveVariables");
var e=h.getProperty("variables");
if(g in e){if(A){var G=e[g];
L.converters["anything"](G,h,l);
}else{l.append(g);
}}else{L.converters["anything"](g,h,l);
}}else{var H=h.getRootProperty("contextualize");
var C=h.getProperty("path");
var j=h.getProperty("omitWhitespace");
var F=h.getProperty("breakLines");
var i=h.getProperty("alignFieldValues");
l.append("{");
if(F){l.appendLineBreak();
l.indent();
}else{if(!j){l.append(" ");
}}var f=0;
var c=0;
var E=h.getRootProperty("fieldNameEncoder");
for(var B in I){if(I.hasOwnProperty(B)){var G=I[B];
f++;
if(!O(G)&&(!K(G)||P(G))){c=Math.max(c,E.encode(B).length);
}}}c=Math.min(c,h.getProperty("maxFieldLength"));
for(var B in I){if(I.hasOwnProperty(B)){var G=I[B];
var k=L.converters[G==null?"null":typeof G];
var d=E.encode(B);
if(F){l.appendIndent();
}l.append(d);
l.append(j?":":": ");
if(!j&&F&&i&&(!O(G)&&(!K(G)||P(G)))){for(var D=d.length;
D<c;
D++){l.append(" ");
}}C.unshift({field:B});
k(G,H(h,C),l);
C.shift();
f--;
if(f>0){l.append(",");
}if(F){l.appendLineBreak();
}else{if(!j){l.append(" ");
}}}}if(F){l.unindent();
l.appendIndent();
}l.append("}");
}}},"string":function(C,B,A){A.append('"'+B.getProperty("encodeJavascriptString")(C)+'"');
},"null":function(C,B,A){A.append("null");
}};
function N(){var B={};
for(var A=0;
A<arguments.length;
A++){B[arguments[A]]=true;
}return function(C,E){if(E.length>0&&E[0].field in B){var D=C.create();
D.setProperty("breakLines",false);
return D;
}else{return C;
}};
}function Q(A){return function(C,B){if(B.length==A){var D=C.create();
D.setProperty("breakLines",false);
return D;
}else{return C;
}};
}})();
CueCard.Languages=[{name:"Afrikaans",id:"/lang/af"},{name:"Akkadian",id:"/lang/kk"},{name:"Albanian",id:"/lang/sq"},{name:"Amharic",id:"/lang/am"},{name:"Arabic",id:"/lang/ar"},{name:"Armenian",id:"/lang/hy"},{name:"Artificial",id:"/lang/art"},{name:"Asturian",id:"/lang/ast"},{name:"Australian languages",id:"/lang/aus"},{name:"Azerbaijani",id:"/lang/az"},{name:"Balinese",id:"/lang/ban"},{name:"Bambara",id:"/lang/bm"},{name:"Bantu",id:"/lang/bnt"},{name:"Basque",id:"/lang/eu"},{name:"Batak",id:"/lang/btk"},{name:"Belarusian",id:"/lang/be"},{name:"Bengali",id:"/lang/bn"},{name:"Bhojpuri",id:"/lang/bho"},{name:"Bosnian",id:"/lang/bs"},{name:"Breton",id:"/lang/br"},{name:"Bulgarian",id:"/lang/bg"},{name:"Buriat",id:"/lang/bua"},{name:"Catalan",id:"/lang/ca"},{name:"Cebuano",id:"/lang/ceb"},{name:"Cherokee",id:"/lang/chr"},{name:"Chichewa",id:"/lang/ny"},{name:"Chinese",id:"/lang/zh"},{name:"Cornish",id:"/lang/kw"},{name:"Corsican",id:"/lang/co"},{name:"Cree",id:"/lang/cr"},{name:"Creoles",id:"/lang/cpf"},{name:"Croatian",id:"/lang/hr"},{name:"Czech",id:"/lang/cs"},{name:"Danish",id:"/lang/da"},{name:"Duala",id:"/lang/dua"},{name:"Dutch",id:"/lang/nl"},{name:"English",id:"/lang/en"},{name:"Esperanto",id:"/lang/eo"},{name:"Estonian",id:"/lang/et"},{name:"Faroese",id:"/lang/fo"},{name:"Filipino",id:"/lang/fil"},{name:"Finnish",id:"/lang/fi"},{name:"French",id:"/lang/fr"},{name:"Frisian",id:"/lang/fy"},{name:"Friulian",id:"/lang/fur"},{name:"Fulah",id:"/lang/ff"},{name:"Ga",id:"/lang/gaa"},{name:"Gaelic",id:"/lang/gd"},{name:"Gallegan",id:"/lang/gl"},{name:"Georgian",id:"/lang/ka"},{name:"German",id:"/lang/de"},{name:"Germanic",id:"/lang/gem"},{name:"Greek",id:"/lang/el"},{name:"Guarani",id:"/lang/gn"},{name:"Haitian",id:"/lang/ht"},{name:"Hausa",id:"/lang/ha"},{name:"Hawaiian",id:"/lang/haw"},{name:"Hebrew",id:"/lang/he"},{name:"Hindi",id:"/lang/hi"},{name:"Hungarian",id:"/lang/hu"},{name:"Icelandic",id:"/lang/is"},{name:"Indonesian",id:"/lang/id"},{name:"Inuktitut",id:"/lang/ku"},{name:"Inuktitut",id:"/lang/iu"},{name:"Irish",id:"/lang/ga"},{name:"Italian",id:"/lang/it"},{name:"Japanese",id:"/lang/ja"},{name:"Judeo-Arabic",id:"/lang/jrb"},{name:"Kalaallisut",id:"/lang/kl"},{name:"Khmer",id:"/lang/km"},{name:"Kinyarwanda",id:"/lang/rw"},{name:"Klingon",id:"/lang/tlh"},{name:"Kongo",id:"/lang/kg"},{name:"Korean",id:"/lang/ko"},{name:"Ladino",id:"/lang/lad"},{name:"Latin",id:"/lang/la"},{name:"Latvian",id:"/lang/lv"},{name:"Limburgan",id:"/lang/li"},{name:"Lingala",id:"/lang/ln"},{name:"Lithuanian",id:"/lang/lt"},{name:"Low German",id:"/lang/nds"},{name:"Luxembourgish",id:"/lang/lb"},{name:"Macedonian",id:"/lang/mk"},{name:"Malagasy",id:"/lang/mg"},{name:"Malay",id:"/lang/ms"},{name:"Malayalam",id:"/lang/ml"},{name:"Maltese",id:"/lang/mt"},{name:"Mandingo",id:"/lang/man"},{name:"Manx",id:"/lang/gv"},{name:"Maori",id:"/lang/mi"},{name:"Marathi",id:"/lang/mr"},{name:"Mohawk",id:"/lang/moh"},{name:"Moldavian",id:"/lang/mo"},{name:"Mongolian",id:"/lang/mn"},{name:"Nahuatl",id:"/lang/nah"},{name:"Navajo",id:"/lang/nv"},{name:"Neapolitan",id:"/lang/nap"},{name:"Nepali",id:"/lang/ne"},{name:"Norse,",id:"/lang/non"},{name:"Northern Sami",id:"/lang/se"},{name:"Norwegian",id:"/lang/no"},{name:"Norwegian Nynorsk",id:"/lang/nn"},{name:"Occitan",id:"/lang/oc"},{name:"Panjabi",id:"/lang/pa"},{name:"Papiamento",id:"/lang/pap"},{name:"Persian",id:"/lang/fa"},{name:"Polish",id:"/lang/pl"},{name:"Portuguese",id:"/lang/pt"},{name:"Pushto",id:"/lang/ps"},{name:"Quechua",id:"/lang/qu"},{name:"Raeto-Romance",id:"/lang/rm"},{name:"Romanian",id:"/lang/ro"},{name:"Romany",id:"/lang/rom"},{name:"Russian",id:"/lang/ru"},{name:"Sakha",id:"/lang/sah"},{name:"Sanskrit",id:"/lang/sa"},{name:"Sardinian",id:"/lang/sc"},{name:"Scots",id:"/lang/sco"},{name:"Serbian",id:"/lang/sr"},{name:"Shona",id:"/lang/sn"},{name:"Sicilian",id:"/lang/scn"},{name:"Slovak",id:"/lang/sk"},{name:"Slovenian",id:"/lang/sl"},{name:"Songhai",id:"/lang/son"},{name:"Spanish",id:"/lang/es"},{name:"Sundanese",id:"/lang/su"},{name:"Swahili",id:"/lang/sw"},{name:"Swedish",id:"/lang/sv"},{name:"Syriac",id:"/lang/syr"},{name:"Tagalog",id:"/lang/tl"},{name:"Tahitian",id:"/lang/ty"},{name:"Tajik",id:"/lang/tg"},{name:"Tamashek",id:"/lang/tmh"},{name:"Tamil",id:"/lang/ta"},{name:"Telugu",id:"/lang/te"},{name:"Thai",id:"/lang/th"},{name:"Tibetan",id:"/lang/bo"},{name:"Tonga",id:"/lang/to"},{name:"Turkish",id:"/lang/tr"},{name:"Turkmen",id:"/lang/tk"},{name:"Tuvinian",id:"/lang/tyv"},{name:"Ukrainian",id:"/lang/uk"},{name:"Urdu",id:"/lang/ur"},{name:"Uzbek",id:"/lang/uz"},{name:"Vietnamese",id:"/lang/vi"},{name:"Welsh",id:"/lang/cy"},{name:"Wolof",id:"/lang/wo"},{name:"Xhosa",id:"/lang/xh"},{name:"Yiddish",id:"/lang/yi"},{name:"Yoruba",id:"/lang/yo"},{name:"Zulu",id:"/lang/zu"}];
CueCard.MqlSyntax={};
CueCard.MqlSyntax.KeywordSuggestions=[{label:"*",hint:"(keyword)",qualifiedProperty:"*",result:"*"},{label:"connect",hint:"(keyword)",qualifiedProperty:"connect",result:"connect"},{label:"create",hint:"(keyword)",qualifiedProperty:"create",result:"create"},{label:"estimate-count",hint:"(keyword)",qualifiedProperty:"estimate-count",result:"estimate-count"},{label:"limit",hint:"(keyword)",qualifiedProperty:"limit",result:"limit"},{label:"optional",hint:"(keyword)",qualifiedProperty:"optional",result:"optional"},{label:"return",hint:"(keyword)",qualifiedProperty:"return",result:"return"},{label:"sort",hint:"(keyword)",qualifiedProperty:"sort",result:"sort"}];
CueCard.MqlSyntax.KeywordValueHints={"*":{choices:[{label:"null",hint:"return a single value",result:null},{label:"[]",hint:"return a list of values",result:[],offset:1},{label:"{}",hint:"return a single object",result:{},offset:1},{label:"[{}]",hint:"return a list of objects",result:[{}],offset:2}]},"connect":{choices:[{label:"insert",hint:"attach a value or object to a non-unique property, or attach the first value or object to a unique property",result:"insert"},{label:"update",hint:"attach a value or object to a unique property replacing any value or object that was previously connected",result:"update"},{label:"replace",hint:"update unique properties and performs an insert for non-unique properties",result:"replace"},{label:"delete",hint:"detach a value or object from any property",result:"delete"}]},"create":{choices:[{label:"unless_exists",hint:"look for a matching object and create it if it doesn't exist",result:"unless_exists"},{label:"unless_connected",hint:"look for a matching object connected to the parent query, and create and connect it if it doesn't exist",result:"unless_connected"},{label:"unconditional",hint:"create the specified object without looking for a match (dangerous; ues carefully)",result:"unconditional"}]},"estimate-count":{choices:[{label:"null",hint:"(keyword)",result:null}]},"limit":{html:'Use a positive integer to limit how many results to return, or <span class="cuecard-code">0</span> for all available results.'},"optional":{choices:[{label:"true",hint:"(keyword)",result:true},{label:"false",hint:"(keyword)",result:false},{label:"required",hint:"(keyword)",result:"required"},{label:"forbidden",hint:"(keyword)",result:"forbidden"}]},"return":{choices:[{label:"count",hint:"(keyword)",result:"count"},{label:"estimate-count",hint:"(keyword)",result:"estimate-count"}]},"sort":{html:'Use a property name in the same query node. Prefix it with <span class="cuecard-code">-</span> to sort in descending order. For more complex ordering, see <a href="">this documentation</a>.'}};
CueCard.MqlSyntax.UniqueTopicValueSuggestions=[{label:"null",hint:"returns a single topic ID",result:null},{label:"{}",hint:"returns a single topic object with a default set of properties",result:{},offset:1},{label:'{ "id" : null, "name" : null }',hint:"returns a single topic object with id and name",result:{"id":null,"name":null}}];
CueCard.MqlSyntax.TopicValueSuggestions=[{label:"[]",hint:"returns a list of topic IDs or topic names",result:[],offset:1},{label:"[{}]",hint:"returns a list of topic objects with a default set of properties",result:[{}],offset:2},{label:'[{ "id" : null, "name" : null, "optional" : true, "limit" : 10 }]',hint:"returns an optional, limited list of topic objects with id and name",result:[{"id":null,"name":null,"optional":true,"limit":10}]}];
CueCard.MqlSyntax.SingleValueSuggestions=[{label:"null",hint:"returns a single value",result:null},{label:'{ "value" : null, "type" : null }',hint:"returns a value with type",result:{"value":null,"type":null}}];
CueCard.MqlSyntax.UniqueStringLiteralValueSuggestions=[{label:"null",hint:"returns a single string",result:null},{label:'{ "value" : null, "lang" : null, "optional" : true }',hint:"returns a single string with more options",result:{"value":null,"lang":null,"optional":true}}];
CueCard.MqlSyntax.StringLiteralValueSuggestions=[{label:"[]",hint:"returns a list of strings",result:null},{label:'[{ "value" : null, "lang" : null, "optional" : true }]',hint:"returns a list of strings with more options",result:[{"value":null,"lang":null,"optional":true}]}];
CueCard.MqlSyntax.UniqueLiteralValueSuggestions=[{label:"null",hint:"returns a single value",result:null},{label:'{ "value" : null, "optional" : true }',hint:"returns a single value with more options",result:{"value":null,"optional":true}}];
CueCard.MqlSyntax.LiteralValueSuggestions=[{label:"[]",hint:"returns a list of values",result:null},{label:'[{ "value" : null, "optional" : true }]',hint:"returns a list of values with more options",result:[{"value":null,"optional":true}]}];
CueCard.OutputPane=function(D,C){this._elmt=$(D);
this._options=C||{};
this._jsonResult=null;
this._lastJsonOutputMode=$.cookie("cc_op_mode")=="text"?"text":"tree";
this._treeConstructed=false;
this._constructUI();
this.layout();
};
CueCard.OutputPane.prototype.dispose=function(){};
CueCard.OutputPane.prototype.layout=function(){var O=this._elmt[0];
var M=this._elmt[0].firstChild.firstChild.firstChild.firstChild;
var K=10;
var P=O.offsetHeight-M.offsetHeight-("verticalPadding" in this._options?this._options.verticalPadding:12);
var J=O.offsetWidth-("horizontalPadding" in this._options?this._options.horizontalPadding:8);
var I=P-($.support.boxModel?2*K:0);
var N=J-($.support.boxModel?2*K:0);
try{this._elmt.find(".cuecard-outputPane-tabBody").css("padding","0px").width(J).height(P);
this._elmt.find(".cuecard-outputPane-status, .cuecard-outputPane-tree").css("padding",K+"px").css("left","0px").css("top","0px").width(N).height(I);
this._elmt.find(".cuecard-outputPane-textarea").css("padding","0px").css("left","0px").css("top","0px").width(J).height(P);
}catch(L){}};
CueCard.OutputPane.prototype._constructUI=function(){var J=this;
var H=this._idPrefix="t"+Math.floor(1000000*Math.random());
function I(A,B){return'<li class="tab"><a href="#'+H+"-"+A+'">'+B+"</a></li>";
}function F(A){return'<div class="cuecard-outputPane-tabBody" id="'+H+"-"+A+'"></div>';
}this._elmt.css("overflow","hidden");
this._elmt.html('<div class="cuecard-outputPane"><div id="'+H+'"><ul>'+I(0,"Tree")+I(1,"Text")+I(2,"Status")+'</ul><div class="tabbed-content">'+F(0)+F(1)+F(2)+"</div></div></div>");
var G=this._elmt.find(".cuecard-outputPane-tabBody");
this._treeTabBody=$(G[0]);
this._textTabBody=$(G[1]);
this._statusTabBody=$(G[2]);
this._constructTextTabBody();
this._constructTreeTabBody();
this._constructStatusTabBody();
this._tabs=$("#"+H);
this._tabs.tabs().bind("tabsselect",function(B,A){window.__cc_tree_disposePopup();
if(A.index==0){J._lastJsonOutputMode="tree";
if(J._jsonResult!=null&&!J._treeConstructed){J._constructTree();
}}else{if(A.index==1){J._lastJsonOutputMode="text";
}}$.cookie("cc_op_mode",J._lastJsonOutputMode,{expires:365});
});
this._tabs.tabs("select",(this._lastJsonOutputMode=="tree")?0:1);
};
CueCard.OutputPane.prototype.setJSONContent=function(G,H){this._jsonResult=G;
this._textarea[0].value=CueCard.jsonize(G,H||{indentCount:2});
var I;
if(this._lastJsonOutputMode=="tree"){this._constructTree();
I=0;
}else{this._tree.empty();
this._treeConstructed=false;
I=1;
}var F=this;
var J=function(){F._tabs.tabs("select",I);
};
window.setTimeout(J,100);
};
CueCard.OutputPane.prototype.setStatus=function(B){this._tabs.tabs("select",2);
this._statusTabBody[0].firstChild.innerHTML=B;
this._jsonResult=null;
this._textarea[0].value="";
this._tree.empty();
this._treeConstructed=false;
};
CueCard.OutputPane.prototype.getJson=function(){return this._jsonResult;
};
CueCard.OutputPane.prototype.renderResponseHeaders=function(L){var P=[];
P.push('<div class="cuecard-outputPane-responseHeaders">');
if("x-metaweb-tid"){var J=L["x-metaweb-tid"];
P.push("<h3>x-metaweb-tid (transaction ID)</h3>");
P.push('<div><a target="_blank" href="http://stats.metaweb.com/query/transaction?tid='+encodeURIComponent(J)+'">'+J+"</a></div>");
}var O=L["x-metaweb-cost"];
if(O){O=O.split(",");
P.push("<h3>x-metaweb-cost header components</h3>");
P.push("<table>");
P.push("<tr><th>code</th><th>value</th><th>meaning</th><th>subsystem</th></tr>");
var N=true;
for(var Q=0;
Q<O.length;
Q++){var R=O[Q].split("=");
R[0]=R[0].replace(/^\s+/,"").replace(/\s+$/,"");
var K=CueCard.XMetawebCosts[R[0]];
P.push("<tr class='"+(N?"cuecard-outputPane-odd":"cuecard-outputPane-even")+((K!==undefined&&"important" in K&&K.important)?" cuecard-outputPane-cost-important":"")+"'>");
P.push("<td>"+R[0]+"</td>");
P.push("<td>"+R[1]+"</td>");
P.push("<td>"+(K!==undefined?K.meaning:"--")+"</td>");
P.push("<td>"+(K!==undefined?K.subsystem:"--")+"</td>");
P.push("</tr>");
N=!N;
}P.push("</table>");
}P.push("<h3>response headers</h3>");
P.push("<table>");
var N=true;
for(var M in L){if(M!="x-metaweb-cost"&&M!="x-metaweb-tid"){P.push("<tr class='"+(N?"cuecard-outputPane-odd":"cuecard-outputPane-even")+"'><td>"+M+"</td><td>"+L[M]+"</td></tr>");
N=!N;
}}P.push("</table>");
P.push("</div>");
this.setStatus(P.join(""));
};
CueCard.OutputPane.prototype._constructTextTabBody=function(){this._textarea=$('<textarea readonly="true" wrap="off"></textarea>').addClass("cuecard-outputPane-textarea").appendTo(this._textTabBody);
};
CueCard.OutputPane.prototype._constructTreeTabBody=function(){this._tree=$("<div></div>").addClass("cuecard-outputPane-tree").appendTo(this._treeTabBody);
};
CueCard.OutputPane.prototype._constructStatusTabBody=function(){this._statusTabBody.html('<div class="cuecard-outputPane-status"></div>');
};
CueCard.OutputPane.prototype._constructCustomTabBody=function(){};
CueCard.OutputPane.prototype._constructTree=function(){var Q=this;
this._treeConstructed=true;
var M=[];
var S=function(B,A){return'<img class="cuecard-outputPane-tree-toggle" onclick="__cc_tree_toggle(this);" src="'+CueCard.urlPrefix+"images/"+B+'" '+(A?"":' style="display: none;"')+"/>";
};
var O=function(A){M.push(A);
};
var W=function(A){return"<a class='cuecard-outputPane-tree-explore' target='_blank' href='"+CueCard.freebaseServiceUrl+"tools/explore"+A+"'>xp</a>";
};
var X=function(A,B){O("<a target='_blank' class='cuecard-outputPane-tree-dataLink' href='"+CueCard.freebaseServiceUrl+"view"+A+"' onmouseover='__cc_tree_mouseOverTopic(this)' onmouseout='__cc_tree_mouseOutTopic(this)' fbid='"+A+"'>"+B+"</a>"+W(A));
};
var P=function(A,B){O("<a target='_blank' class='cuecard-outputPane-tree-dataLink' href='"+CueCard.freebaseServiceUrl+"view"+A+"' onmouseover='__cc_tree_mouseOverImage(this)' onmouseout='__cc_tree_mouseOutImage(this)' fbid='"+A+"'>"+B+"</a>"+W(A));
};
var V=function(A){O("<a target='_blank' class='cuecard-outputPane-tree-dataLink' href='"+A+"' onmouseover='__cc_tree_mouseOverImage(this)' onmouseout='__cc_tree_mouseOutImage(this)'>"+JSON.stringify(A)+"</a>");
};
var R=function(A,B){O("<a target='_blank' class='cuecard-outputPane-tree-dataLink' href='"+CueCard.freebaseServiceUrl+"view"+A+"' onmouseover='__cc_tree_mouseOverArticle(this)' onmouseout='__cc_tree_mouseOutArticle(this)' fbid='"+A+"'>"+B+"</a>"+W(A));
};
var N=function(B,A,C){if(B=="image"||B=="/common/topic/image"){P(A,C);
}else{if(B=="article"||B=="/common/topic/article"){R(A,C);
}else{X(A,C);
}}};
var T=function(B,A){return B.length>A.length&&B.substr(0,A.length)==A;
};
var U=function(F,H,A){if(F==null){H.startBody(false);
O("<span>"+JSON.stringify(F)+"</span>");
H.endBody(false);
}else{if(typeof F!="object"){H.startBody(false);
var B=A[0];
var D=A.length>1?A[1]:"";
if(B=="id"||B=="/type/object/id"){N(D,F,JSON.stringify(F));
}else{if(B=="guid"||B=="/type/object/guid"){N(D,"/guid/"+F.substr(1),JSON.stringify(F));
}else{if(B=="type"||B=="/type/object/type"){O("<a target='_blank' href='"+CueCard.freebaseServiceUrl+"type/schema"+F+"'>"+JSON.stringify(F)+"</a>"+W(F));
}else{if(typeof F=="string"&&(T(F,"http://")||T(F,"https://")||T(F,"ftp://"))){if(T(F,"http://chart.apis.google.com/chart?")){V(F);
}else{O("<a target='_blank' href='"+F+"'>"+JSON.stringify(F)+"</a>");
}}else{O("<span>"+JSON.stringify(F)+"</span>");
}}}}H.endBody(false);
}else{if(F instanceof Array){if(F.length==0){H.startBody(false);
O("<span>[]</span>");
H.endBody(false);
}else{var I=(F.length>1&&typeof F[0]=="object")?"":' style="display: none;"';
H.startBody(true,'<span cc:mode="normal">[ <a href="javascript:{}" class="cuecard-outputPane-tree-all" onclick="__cc_tree_expandAll(this);"'+I+'>expand all</a><span class="cuecard-outputPane-tree-toggles"'+I+'> &bull; </span><a href="javascript:{}" class="cuecard-outputPane-tree-all" onclick="__cc_tree_collapseAll(this);"'+I+'>collapse all</a><span class="cuecard-outputPane-tree-toggles"'+I+'> &bull; </span><a href="javascript:{}" class="cuecard-outputPane-tree-all" onclick="__cc_tree_flip(this);"'+I+">1-by-1</a></span>",'<span style="display: none;">[ '+(F.length>1?(F.length+" elements"):"1 element")+" ]</span>");
O('<div class="cuecard-outputPane-tree-arrayBody cuecard-outputPane-tree-normalMode">');
var G=function(K,L,J){return{startBody:function(c,d,b){if(c){O('<div class="cuecard-outputPane-tree-arrayElement">'+S("expanded.png",true)+S("collapsed.png",false)+'<span class="cuecard-outputPane-tree-memberName">'+K+":</span> "+d+b+"<span>"+(L?'<a href="javascript:{}" class="cuecard-outputPane-tree-flipControl" onclick="__cc_tree_flipPrevious(this);">previous</a> ':"")+(J?'<a href="javascript:{}" class="cuecard-outputPane-tree-flipControl" onclick="__cc_tree_flipNext(this);">next</a>':"")+"</span>");
}else{O('<div class="cuecard-outputPane-tree-arrayElement"><span class="cuecard-outputPane-tree-memberName">'+K+":</span> ");
}},endBody:function(Z){O("</div>");
}};
};
for(var C=0;
C<F.length;
C++){U(F[C],G(C,C>0,C<F.length-1),A);
}O("</div>");
H.endBody(true);
}}else{H.startBody(true,"<span>{</span>",'<span style="display: none;">{...}</span>');
O('<div class="cuecard-outputPane-tree-objectBody cuecard-outputPane-tree-normalMode">');
var G=function(J){return{startBody:function(Z,K,L){if(Z){O('<div class="cuecard-outputPane-tree-objectField">'+S("expanded.png",true)+S("collapsed.png",false)+'<span class="cuecard-outputPane-tree-memberName">'+J+":</span> "+K+L+"<span></span>");
}else{O('<div class="cuecard-outputPane-tree-objectField"><span class="cuecard-outputPane-tree-memberName">'+J+":</span> ");
}},endBody:function(K){O("</div>");
}};
};
for(var E in F){U(F[E],G(E),[E].concat(A));
}O("</div>");
H.endBody(true);
}}}};
U(this._jsonResult,{startBody:function(A){},endBody:function(){}},["__root__"]);
this._tree.html(M.join(""));
};
window.__cc_tree_toggle=function(F){var D=F.src.indexOf("expanded.png")>0;
var E=F.parentNode;
if(D){window.__cc_tree_collapse(E);
}else{window.__cc_tree_expand(E);
}};
window.__cc_tree_expand=function(G){if(G.firstChild.tagName.toLowerCase()=="img"){var E=G.lastChild;
E.style.display="block";
G.childNodes[0].style.display="inline";
G.childNodes[1].style.display="none";
var F=E.previousSibling.previousSibling;
var H=F.previousSibling;
H.style.display="inline";
F.style.display="none";
}};
window.__cc_tree_collapse=function(G){if(G.firstChild.tagName.toLowerCase()=="img"){var E=G.lastChild;
E.style.display="none";
G.childNodes[0].style.display="none";
G.childNodes[1].style.display="inline";
var F=E.previousSibling.previousSibling;
var H=F.previousSibling;
H.style.display="none";
F.style.display="inline";
}};
(function(){var B=function(F){var A=F.parentNode.getAttribute("cc:mode");
var H=F.parentNode.nextSibling.nextSibling.nextSibling;
if(A=="flip"){for(var G=0;
G<H.childNodes.length;
G++){H.childNodes[G].style.display="block";
}F.parentNode.setAttribute("cc:mode","normal");
$(F.parentNode.parentNode).find("> div.cuecard-outputPane-tree-arrayBody").addClass("cuecard-outputPane-tree-normalMode").removeClass("cuecard-outputPane-tree-flipMode");
}};
window.__cc_tree_expandAll=function(A){B(A);
var F=A.parentNode.nextSibling.nextSibling.nextSibling;
for(var E=0;
E<F.childNodes.length;
E++){__cc_tree_expand(F.childNodes[E]);
}};
window.__cc_tree_collapseAll=function(A){B(A);
var F=A.parentNode.nextSibling.nextSibling.nextSibling;
for(var E=0;
E<F.childNodes.length;
E++){__cc_tree_collapse(F.childNodes[E]);
}};
window.__cc_tree_flip=function(H){var G=H.parentNode.getAttribute("cc:mode");
var J=H.parentNode.nextSibling.nextSibling.nextSibling;
if(G=="normal"){for(var I=0;
I<J.childNodes.length;
I++){var A=J.childNodes[I];
A.style.display=I==0?"block":"none";
__cc_tree_expand(A);
}H.parentNode.setAttribute("cc:mode","flip");
$(H.parentNode.parentNode).find("> div.cuecard-outputPane-tree-arrayBody").removeClass("cuecard-outputPane-tree-normalMode").addClass("cuecard-outputPane-tree-flipMode");
}};
window.__cc_tree_flipPrevious=function(A){var D=A.parentNode.parentNode;
D.style.display="none";
D.previousSibling.style.display="block";
};
window.__cc_tree_flipNext=function(A){var D=A.parentNode.parentNode;
D.style.display="none";
D.nextSibling.style.display="block";
};
window.__cc_tree_mouseOverTopic=function(D){var A=D.getAttribute("fbid");
$.getJSON("http://hotshot.dfhuynh.user.dev.freebaseapps.com/html?id="+A+"&callback=?",function(F){var C=__cc_tree_createPopup(D);
$(C).addClass("cuecard-outputPane-tree-popup-topic").html(F);
});
};
window.__cc_tree_mouseOutTopic=function(A){__cc_tree_disposePopup();
};
window.__cc_tree_mouseOverImage=function(G){var A=G.getAttribute("fbid");
if(A!=null&&A.length>0){var H=CueCard.freebaseServiceUrl+"api/trans/image_thumb"+A+"?mode=fillcrop&amp;maxwidth=100&amp;maxheight=100";
}else{var H=G.href;
}var F=__cc_tree_createPopup(G);
F.innerHTML="<img src='"+H+"' />";
};
window.__cc_tree_mouseOutImage=function(A){__cc_tree_disposePopup();
};
window.__cc_tree_mouseOverArticle=function(D){var A=D.getAttribute("fbid");
$.getJSON(CueCard.freebaseServiceUrl+"api/trans/blurb"+A+"?callback=?",function(H){var G=H.result.body;
var C=__cc_tree_createPopup(D);
$(C).addClass("cuecard-outputPane-tree-popup-article").html(G);
});
};
window.__cc_tree_mouseOutArticle=function(A){__cc_tree_disposePopup();
};
window.__cc_tree_createPopup=function(F){var A=document.getElementById("cuecard-outputPane-tree-popup");
if(A==null){A=document.createElement("div");
A.id="cuecard-outputPane-tree-popup";
A.className="cuecard-outputPane-tree-popup";
A.onmouseover=window.__cc_tree_disposePopup;
document.body.appendChild(A);
}var E=$(F).offset();
A.style.top=(E.top+F.offsetHeight+10)+"px";
A.style.left=(E.left)+"px";
return A;
};
window.__cc_tree_disposePopup=function(){var A=document.getElementById("cuecard-outputPane-tree-popup");
if(A!=null){A.parentNode.removeChild(A);
}};
})();
CueCard.Popup=function(G,H,F,I,J){this._left=G;
this._top=H;
this._height=F;
this._windows=I;
this._handlers=J||{};
this._pendingContinuations=[];
this.elmt=$('<div class="cuecard-popup-container"></div>').css("top",(this._top+this._height)+"px").css("left",this._left+"px").appendTo("body");
this._addEventHandlers();
};
CueCard.Popup.prototype.addPendingContinuation=function(B){this._pendingContinuations.push(B);
};
CueCard.Popup.prototype.reposition=function(){var D=this.elmt.height();
var C=this.elmt.width();
if(this._top+this._height+D>=$(window).height()){this.elmt.css("top",(this._top-D-5)+"px");
}else{this.elmt.css("top",(this._top+this._height)+"px");
}if(this._left+C>=$(window).width()){this.elmt.css("left",($(window).width()-C-25)+"px");
}else{this.elmt.css("left",(this._left)+"px");
}};
CueCard.Popup.prototype.close=function(){this._remove();
this._pendingContinuations=null;
};
CueCard.Popup.prototype.cancel=function(){if(this.elmt!=null){this._remove();
this._cancelPendingContinuations();
this._pendingContinuations=null;
}};
CueCard.Popup.prototype._remove=function(){this._removeEventHandlers();
this.elmt.remove();
this.elmt=null;
};
CueCard.Popup.prototype._cancelPendingContinuations=function(){for(var C=0;
C<this._pendingContinuations.length;
C++){try{this._pendingContinuations[C].cancel();
}catch(D){}}this._pendingContinuations=[];
};
CueCard.Popup.prototype._addEventHandlers=function(){var E=this;
this._handleKeyDown=function(A){return E._onKeyDown(A);
};
this._handleMouseDown=function(A){return E._onMouseDown(A);
};
for(var H=0;
H<this._windows.length;
H++){var F=this._windows[H];
try{$(F.document).keydown(this._handleKeyDown).mousedown(this._handleMouseDown);
}catch(G){alert("Unable to install keyup handler on codemirror window");
}}};
CueCard.Popup.prototype._removeEventHandlers=function(){var E=this;
for(var H=0;
H<this._windows.length;
H++){var F=this._windows[H];
try{$(F.document).unbind("keydown",this._handleKeyDown).unbind("mousedown",this._handleMouseDown);
}catch(G){alert("Unable to install keyup handler on codemirror window");
}}};
CueCard.Popup.prototype._onKeyDown=function(B){if(B.keyCode==27){this.cancel();
if("onCancel" in this._handlers){this._handlers["onCancel"]("key");
}}};
CueCard.Popup.prototype._onMouseDown=function(B){if(this.mouseEventOutsidePopup(B)){this.cancel();
if("onCancel" in this._handlers){this._handlers["onCancel"]("mouse");
}}};
CueCard.Popup.prototype.mouseEventOutsidePopup=function(C){if(C.currentTarget!=this.elmt[0].ownerDocument){return true;
}else{var D=this.elmt.offset();
if(C.pageX<D.left||C.pageX>D.left+this.elmt.width()||C.pageY<D.top||C.pageY>D.top+this.elmt.height()){return true;
}}return false;
};
CueCard.PropertySuggestor=function(G,H,F,E){this._popup=G;
this._defaultSuggestions=H;
this._entries=F;
this._onCommit=E;
};
CueCard.PropertySuggestor.prototype.getSuggestions=function(T,N){T=T.toLowerCase();
var U=[];
var S={};
for(var V=0;
V<this._entries.length;
V++){var R=this._entries[V];
if(T.length==0){U.push(R);
}else{if(R.label.toLowerCase().indexOf(T)>=0){U.push(R);
}else{for(var L=0;
L<R.expectedTypes.length;
L++){var M=R.expectedTypes[L];
if(M.name.toLowerCase().indexOf(T)>=0){U.push({label:R.label,hint:R.hint+" &rarr; type "+M.id,qualifiedProperty:R.qualifiedProperty,result:R.result,offset:R["offset"],extent:R["extent"]});
S[R.qualifiedProperty]=true;
break;
}}}}}for(var V=0;
V<this._defaultSuggestions.length;
V++){var R=this._defaultSuggestions[V];
if(T.length==0||R.label.toLowerCase().indexOf(T)>=0){U.push(R);
}}if(T.length<3&&U.length>3){N(U);
}else{var Q=this;
var P=CueCard.UI.createBlockingContinuations(function(G,C){for(var F=0;
F<C.result.length;
F++){var D=C.result[F];
if(!(D.id in S)&&"/type/property/schema" in D&&D["/type/property/schema"]!=null&&D["/type/property/schema"].length>0&&"key" in D&&D.key!=null&&D.key.length>0){var B="/type/property/expected_type" in D&&D["/type/property/expected_type"]!=null?D["/type/property/expected_type"]:[];
var E={label:D.key[0],hint:"of type "+D["/type/property/schema"][0].id,qualifiedProperty:D.id,expectedTypes:B};
var A='"'+D.id+'" : ';
CueCard.QueryEditor.setPropertySuggestionSuffix(B.length>0?B[0]:"",E,E["/type/property/unique"],A);
U.push(E);
}}N(U);
});
this._popup.addPendingContinuation(P);
var O=CueCard.helper+"suggest-arbitrary-properties?q="+encodeURIComponent(T);
CueCard.JsonpQueue.call(O,P.onDone,P.onError);
}};
CueCard.PropertySuggestor.prototype.commit=function(B){this._onCommit(B);
};
CueCard.QueryEditor=function(L,M){this._container=L;
this._options=M;
this._outputPane=null;
this._controlPane=null;
this._warnWrites=false;
this._assistKeyComboDetected=false;
this._popup=null;
var N=this;
this._overflowInput=$("<input></input>").css("position","absolute").css("left","-500px").css("top","0px").appendTo(document.body);
this._container.innerHTML='<div class="cuecard-queryEditor-inner"></div>';
this._controlTopContainer=$('<div class="cuecard-queryEditor-controls-top"><table width="100%" cellspacing="0" cellpadding="0"><tr><td width="99%"></td></tr></table></div>').appendTo(this._container.firstChild);
this._iframeContainer=$('<div class="cuecard-queryEditor-content"></div>').appendTo(this._container.firstChild);
this._controlBottomContainer=$('<div class="cuecard-queryEditor-controls-bottom"><table width="100%" cellspacing="0" cellpadding="0"><tr><td width="90%"></td></tr><tr><td width="90%"></td></tr></table></div>').appendTo(this._container.firstChild);
this._constructButtons();
this.layout();
var J="[{\n  \n}]";
var I=1;
var K=2;
if("content" in M){J=M.content;
I=0;
K=0;
}var H={path:CueCard.codemirrorPrefix+"js/",parserfile:["tokenizejavascript.js","parsejavascript.js"],stylesheet:CueCard.urlPrefix+"styles/codemirror-jscolors.css",height:"100%",autoMatchParens:true,textWrapping:false,readOnly:"readOnly" in M?M.readOnly:false,content:J,initCallback:function(C){N._onReady();
try{var B=N._editor.nthLine(I+1);
N._editor.selectLines(B,K,B,K);
}catch(A){}if("onReady" in M){M["onReady"]();
}if(M["focusOnReady"]){N.focus();
}}};
if("onChange" in M){H.onChange=M.onChange;
}if(M.codeMirror){$.extend(H,M.codeMirror);
}this._editor=new CodeMirror(function(A){N._iframeContainer.append(A);
},H);
};
CueCard.QueryEditor.nativeTypes={"/type/int":true,"/type/float":true,"/type/boolean":true,"/type/rawstring":true,"/type/uri":true,"/type/datetime":true,"/type/bytestring":true,"/type/value":true,"/type/text":true,"/type/enumeration":true};
CueCard.QueryEditor.prototype.dispose=function(){this._cancelPopup();
$(this._editor._top_element).remove();
this._overflowInput.remove();
this._controlTopContainer.remove();
this._controlBottomContainer.remove();
this._iframeContainer.remove();
this._editor=null;
this._overflowInput=null;
this._controlTopContainer=null;
this._controlBottomContainer=null;
this._iframeContainer=null;
};
CueCard.QueryEditor.prototype.layout=function(){var B=this._container.offsetHeight-this._controlTopContainer[0].offsetHeight-this._controlBottomContainer[0].offsetHeight;
this._iframeContainer.css("top",this._controlTopContainer[0].offsetHeight+"px").css("height",B+"px");
};
CueCard.QueryEditor.prototype.setOutputPane=function(B){this._outputPane=B;
};
CueCard.QueryEditor.prototype.getOutputPane=function(){return this._outputPane;
};
CueCard.QueryEditor.prototype.setControlPane=function(B){this._controlPane=B;
};
CueCard.QueryEditor.prototype.getControlPane=function(){return this._controlPane;
};
CueCard.QueryEditor.prototype._constructButtons=function(){var J=this;
var H=this._controlTopContainer.find("tr");
var F=function(D,B,C){var A=H[0].insertCell(D);
A.className=B?"cuecard-queryEditor-controls-leftAligned":"cuecard-queryEditor-controls-rightAligned";
A.appendChild(C);
};
var I=this._controlBottomContainer.find("tr");
var G=function(L,B,D,A){var E=I[0].insertCell(L);
var C=I[1].insertCell(L);
E.className=B?"cuecard-queryEditor-controls-leftAligned":"cuecard-queryEditor-controls-rightAligned";
C.className=E.className+" cuecard-queryEditor-buttonHint";
E.appendChild(D);
C.appendChild($('<span class="cuecard-queryEditor-buttonHint">'+A+"</span>")[0]);
};
F(0,true,$('<button class="cuecard-queryEditor-examples">Examples...</button>').click(function(A){J._showExamples();
})[0]);
F(1,true,$('<span><a href="http://www.freebase.com/docs/data" target="_blank">MQL&nbsp;Tutorial</a>&nbsp;&bull;&nbsp;<a href="http://www.freebase.com/docs/mql" target="_blank">MQL&nbsp;Reference</a></span>')[0]);
F(3,false,$('<button class="cuecard-queryEditor-undo">Undo</button>').click(function(A){J._editor.editor.history.undo();
})[0]);
F(4,false,$('<button class="cuecard-queryEditor-redo">Redo</button>').click(function(A){J._editor.editor.history.redo();
})[0]);
F(5,false,$('<button class="cuecard-queryEditor-redo">Clear</button>').click(function(A){J.content("");
J.focus();
})[0]);
G(0,true,$('<button class="cuecard-queryEditor-queryAssist">Query&nbsp;Assist</button>').click(function(A){J.startAssistAtCursor();
})[0],"Tab");
G(1,true,$('<button class="cuecard-queryEditor-explainQuery">Explain&nbsp;Query</button>').click(function(A){alert("Not Yet Implemented");
}).hide()[0],"");
G(3,false,$('<button class="cuecard-queryEditor-cleanUp">Clean&nbsp;Up</button>').click(function(A){J._onCleanUp();
})[0],"");
G(4,false,$('<button class="cuecard-queryEditor-run">Run</button>').click(function(A){J._onRun(false);
})[0],"Ctrl-Enter");
};
CueCard.QueryEditor.prototype.focus=function(){this._editor.focus();
return this;
};
CueCard.QueryEditor.prototype.content=function(E){if(E==undefined){return this._editor.getCode();
}else{var F=this._editor.getCode();
if(F!=E){var D=this._editor.editor;
D.history.push(null,null,this._editor.win.fixSpaces(E.replace(/\t/g,"  ").replace(/\u00a0/g," ")).replace(/\r\n?/g,"\n").split("\n"));
D.addDirtyNode();
D.scheduleHighlight();
if(D.history.onChange){D.history.onChange();
}}return this;
}};
CueCard.QueryEditor.prototype.getUnresolvedQuery=function(){var C=this.getQueryModelAndContext();
var D=C.model.toQueryJson();
return CueCard.jsonize(D,this.getJsonizingSettings({breakLines:false,omitWhitespace:true,variables:this._getVariables(),resolveVariables:false}));
};
CueCard.QueryEditor.prototype.getResolvedQueryEnvelope=function(B){return this._getResolvedQueryEnvelope(false,B);
};
CueCard.QueryEditor.prototype.getJsonizingSettings=function(B){if(this._controlPane){return this._controlPane.getJsonizingSettings(B);
}else{B=B||{};
if(!("indentCount" in B)){B.indentCount=2;
}return B;
}};
CueCard.QueryEditor.prototype._getVariables=function(){if(this._controlPane){return this._controlPane.getVariables();
}else{return{};
}};
CueCard.QueryEditor.prototype._getQueryEnvelope=function(){if(this._controlPane){return this._controlPane.getQueryEnvelope();
}else{return{};
}};
CueCard.QueryEditor.prototype._getResolvedQueryEnvelope=function(M,O){O=O||{};
var L=this.getQueryModelAndContext();
var N=L.model.toQueryJson();
O.isWriteQuery=this._isWriteQuery(N);
var S=this._getQueryEnvelope();
var Q=this._getVariables();
if(M){this.content(CueCard.jsonize(N,this.getJsonizingSettings({variables:Q,resolveVariables:false})));
try{var P=this.getQueryModelAndContext();
var R=P.model.getCursorFromContext(L.context);
var K=this._editor.nthLine(R.line+1);
this._editor.selectLines(K,R.col);
}catch(T){}}S.query=N;
return CueCard.jsonize(S,this.getJsonizingSettings({breakLines:false,variables:Q,resolveVariables:true}));
};
CueCard.QueryEditor.prototype._isWriteQuery=function(D){var C=function(B){if(B==null){return false;
}else{if(B instanceof Array){if(B.length>0&&typeof B[0]=="object"){for(var F=0;
F<B.length;
F++){if(C(B[F])){return true;
}}return false;
}else{return false;
}}else{if(typeof B=="object"){for(var A in B){if(A=="connect"||A=="create"||C(B[A])){return true;
}}return false;
}else{return false;
}}}};
return C(D);
};
CueCard.QueryEditor.prototype._confirmWriteQuery=function(B){return(B.isWriteQuery&&!this._warnWrites&&CueCard.apiProxy.base.indexOf("sandbox")<0);
};
CueCard.QueryEditor.prototype.getMqlReadURL=function(){var D={};
var F=this.getResolvedQueryEnvelope(D);
var E=CueCard.freebaseServiceUrl+"api/service/"+(D.isWriteQuery?"mqlwrite":"mqlread");
if("service" in this._options&&this._options.service!=null){E=this._options.service;
}return E+"?query="+encodeURIComponent(F);
};
CueCard.QueryEditor.prototype.run=function(H){if(this._outputPane!=null){var L={};
var J=this._getResolvedQueryEnvelope(H||(this._controlPane&&this._controlPane.getSetting("cleanup")),L);
if(this._confirmWriteQuery(L)){if(window.confirm("Your query will write data into Freebase.\nAre you sure you want to do that?")){this._warnWrites=true;
}else{return ;
}}var M=CueCard.apiProxy.base+CueCard.apiProxy[L.isWriteQuery?"write":"read"]+("emql" in this._options&&this._options.emql?"emql=1&":"")+("debug" in this._options?("debug="+this._options.debug+"&"):"")+("service" in this._options&&this._options.service!=null?("service="+encodeURIComponent(this._options.service)+"&"):"");
var N=this;
var I=function(A){if(A["error"]=="unauthorized"){N._outputPane.setStatus("Query editor is not authorized to write on your behalf.");
N._options.onUnauthorizedMqlWrite();
}else{N._outputPane.renderResponseHeaders(A.headers);
var B={};
if(N._controlPane!=null&&N._controlPane.getSetting("multilineErrorMessages")&&"code" in A.body&&A.body.code=="/api/status/error"&&"messages" in A.body&&A.body.messages!=null){B["encodeJavascriptString"]=function(C){return C;
};
}N._outputPane.setJSONContent(A.body,N.getJsonizingSettings(B));
}};
var K=function(A){alert(A);
};
this._outputPane.setStatus("Querying...");
if(L.isWriteQuery||J.length>1024){$.post(M,{"query":J},I,"json");
}else{CueCard.JsonpQueue.call(M+"query="+encodeURIComponent(J),I,K);
}}if("onRun" in this._options){this._options["onRun"]();
}};
CueCard.QueryEditor.prototype.getQueryModelAndContext=function(){var E=this._editor.cursorPosition(false);
var F=this._editor.lineNumber(E.line)-1;
var D=E.character;
return CueCard.QueryParser.parseForContext(this._editor.getCode(),0,F,D);
};
CueCard.QueryEditor.prototype._onReady=function(){var C=this;
try{$(this._editor.win.document).keyup(function(A){return C._onEditorKeyUp(A);
}).keydown(function(A){return C._onEditorKeyDown(A);
}).mousedown(function(A){return C._onEditorMouseDown(A);
});
}catch(D){alert("Unable to install keyup handler on codemirror window");
}if("cleanUp" in this._options&&this._options.cleanUp){this._onCleanUp();
}};
CueCard.QueryEditor.prototype._onRun=function(B){this.run(B);
};
CueCard.QueryEditor.prototype._onCleanUp=function(){var D=this.getQueryModelAndContext();
var F=D.model.toQueryJson();
var E=this._getVariables();
this.content(CueCard.jsonize(F,this.getJsonizingSettings({variables:E,resolveVariables:false})));
};
CueCard.QueryEditor.prototype._onEditorMouseDown=function(B){};
CueCard.QueryEditor.prototype._onEditorKeyDown=function(B){if(B.keyCode==9||(B.keyCode==32&&(B.ctrlKey||B.metaKey||B.altKey))){this._assistKeyComboDetected=true;
B.preventDefault();
return false;
}else{this._assistKeyComboDetected=false;
if((B.metaKey||B.ctrlKey)&&B.keyCode==13){this._onRun(B.shiftKey);
}}};
CueCard.QueryEditor.prototype._onEditorKeyUp=function(B){if(this._assistKeyComboDetected){this._assistKeyComboDetected=false;
this.startAssistAtCursor();
B.preventDefault();
return false;
}};
CueCard.QueryEditor.prototype.startAssistAtCursor=function(){var O=this._editor.cursorPosition(false);
var W=this._editor.lineNumber(O.line)-1;
var N=O.character;
var Q=this._editor.lineContent(O.line);
var U=this._editor.win.document.body.firstChild;
var S=O.line||U;
var X=S.nextSibling;
var T=N;
while(T>0&&X!=null&&X.tagName.toLowerCase()!="br"&&X.firstChild!=null&&X.firstChild.nodeValue.length>=T){T-=X.firstChild.nodeValue.length;
S=X;
X=X.nextSibling;
}if(X==null||X.tagName.toLowerCase()=="br"){if(X!=null){var V=$(X).offset();
if($.browser.msie&&S!=null&&S.tagName.toLowerCase()!="br"){var M=S.offsetWidth;
var R=S.offsetHeight;
}else{var M=V.left;
var R=X.offsetHeight;
}}else{var V=$(S).offset();
var P=S.firstChild?S.firstChild.nodeValue.length:0;
var M=V.left+(P==0?0:(T*S.offsetWidth/P));
var R=S.offsetHeight;
}this._startAssist(W,N,{left:M,top:V.top,height:R});
}else{var V=$(X).offset();
var P=X.firstChild?X.firstChild.nodeValue.length:0;
this._startAssist(W,N,{left:V.left+(P==0?0:(T*X.offsetWidth/P)),top:V.top,height:X.offsetHeight});
}};
CueCard.QueryEditor.prototype._startAssist=function(M,P,O){this._cancelPopup();
if(O!=null){var L=$(this._iframeContainer).offset();
L.left-=this._editor.win.document.body.scrollLeft+document.body.scrollLeft;
L.top-=this._editor.win.document.body.scrollTop+document.body.scrollTop;
var N=this;
this._popup=new CueCard.Popup(Math.round(L.left+O.left),Math.round(L.top+O.top),Math.round(O.height),[window,this._editor.win],{onCancel:function(A){if(A=="key"){N.focus();
}}});
this._popup.elmt.html('<div class="cuecard-popup-message">Please wait...</div>');
var Q=this.getQueryModelAndContext();
if(Q.context.length>0){var K=Q.context[Q.context.length-1];
if("relative" in K){if(K.node.type==CueCard.QueryNode.TYPE_NONTERMINAL){if(K.relative=="path"||K.relative=="before"){this._startSuggestProperties(M,P,Q,K);
return ;
}else{if(K.relative=="space"){var R=K.node.links[K.child];
this._startSuggestValues(M,P,Q,K,R);
return ;
}}}else{if(K.node.type==CueCard.QueryNode.TYPE_TERMINAL){var R=null;
if(Q.context.length>1){var J=Q.context[Q.context.length-2];
R=J.node.links[J.child];
}this._startSuggestValues(M,P,Q,K,R);
return ;
}}}else{var R=null;
if(Q.context.length>1){var J=Q.context[Q.context.length-2];
if(J.node.type==CueCard.QueryNode.TYPE_NONTERMINAL){R=J.node.links[J.child];
}else{if(Q.context.length>2){J=Q.context[Q.context.length-3];
R=J.node.links[J.child];
}}}this._startSuggestValues(M,P,Q,K,R);
return ;
}}}this._popup.elmt.html('<div class="cuecard-popup-message">Sorry, we don\'t know how to assist you here. Send us a link to this exact query using the links at the upper right corner and we will investigate. Thank you!</div>');
};
CueCard.QueryEditor.prototype._cancelPopup=function(){if(this._popup!=null){this._popup.cancel();
this._popup=null;
}};
CueCard.QueryEditor.prototype._startSuggestProperties=function(H,J,I,G){var L=this;
var K=(G.relative=="path")?G.node.links[G.child].token:null;
this._startBufferInput();
this._prepareQueryForSuggestions(I,H,J,K,function(F,C,E,A){var B=function(Y,Z){var W=[];
var V=[];
var U=[];
Z.node.getDeclaredTypes(W);
Z.node.getDeclaredIDs(V);
Z.node.getDeclaredGUIDs(U);
var T=[];
if(W.length>0){T.push("t="+encodeURIComponent(W.join(",")));
}if(V.length>0){T.push("i="+encodeURIComponent(V.join(",")));
}if(U.length>0){T.push("g="+encodeURIComponent(U.join(",")));
}if(Z.property!=null){T.push("p="+encodeURIComponent(Z.property));
T.push("r="+Z.reverse);
}var X=CueCard.helper+"suggest-properties?"+T.join("&");
CueCard.JsonpQueue.call(X,Y.extend(D).onDone,F.onError);
return true;
};
var D=function(P,O){L._suggestProperties(I,O,C+L._stopBufferInput(),E);
};
I.model.locateInnerMostNonTerminal(I.context,F.extend(B));
return true;
});
};
CueCard.QueryEditor.prototype._startBufferInput=function(){this._overflowInput[0].value="";
this._overflowInput[0].focus();
};
CueCard.QueryEditor.prototype._stopBufferInput=function(){return this._overflowInput[0].value;
};
CueCard.QueryEditor.prototype._suggestProperties=function(T,W,V,Y){this._popup.elmt.empty();
this._popup.elmt.html("<div></div>");
var d=[];
for(var Z in W.properties){var l=W.properties[Z];
var a=Z.lastIndexOf("/");
var f=Z.substr(a+1);
var i=Z.substr(0,a);
var g=l.explicit;
if("parentProperty" in l){var e='"'+l.parentProperty+'" : [{ "'+f+'" : ';
var h=(l.unique?"null":"[]");
var U=" }]";
d.push({label:f,hint:"of type "+i+" (through "+l.parentProperty+")",qualifiedProperty:Z,result:e+h+U,offset:e.length,extent:h.length,expectedTypes:l.expectedTypes});
}else{var e='"'+(g?f:Z)+'" : ';
var k=l.expectedTypes.length>0?l.expectedTypes[0].id:"";
var X={label:f,hint:"of type "+i,qualifiedProperty:Z,expectedTypes:l.expectedTypes};
CueCard.QueryEditor.setPropertySuggestionSuffix(k,X,l.unique,e);
d.push(X);
}}var b=this;
var j=new CueCard.PropertySuggestor(this._popup,CueCard.MqlSyntax.KeywordSuggestions,d,Y);
var c=new CueCard.SuggestionController(this._popup,this._popup.elmt[0].firstChild,j,V);
};
CueCard.QueryEditor.setPropertySuggestionSuffix=function(I,H,G,F){var J=null;
if(I=="/common/image"||I=="/common/document"){J='{ "id" : null, "optional" : true, "limit" : 3 }';
if(!G){J="["+J+"]";
}}else{if(I=="/measurement_unit/dated_integer"){J='{ "number" : null, "date" : null }';
if(G){J="["+J+"]";
}}else{if(I=="/measurement_unit/dated_money_value"){J='{ "amount" : null, "valid_date" : null, "currency" : null }';
if(G){J="["+J+"]";
}}else{if(I.indexOf("/type/")==0){J=(G?"null":"[]");
}else{J=(G?"{}":"[{}]");
}}}}H.result=F+J;
H.offset=F.length;
H.extent=J.length;
};
CueCard.QueryEditor.prototype._startSuggestValues=function(I,K,J,H,L){var N=this;
var M=("token" in H)?H.token:null;
this._startBufferInput();
this._prepareQueryForSuggestions(J,I,K,M,function(A,W,d,E){W+=N._stopBufferInput();
if(L!=null&&!L.reverse&&CueCard.QueryNode.isMqlKeyword(L.path)){N._suggestValuesForKeyword(I,K,J,H,L.path,W,d);
}else{function F(){N._popup.elmt.empty();
N._popup.elmt.html('<div></div><div class="cuecard-suggestion-hint-message">Keep typing to search for topics of types fitting this point in the query.</div>');
}var D=L.qualifiedProperty;
var G=L.reverse;
if(!G&&(D=="/type/object/id"||D=="/type/object/guid"||D=="/type/object/name")){var X=function(f,S){F();
var U=[];
S.node.getDeclaredTypes(U);
if("property" in S&&S.property!=null){var O=S.property;
var V=S.reverse;
if(G){U.push(O.substr(0,O.lastIndexOf("/")));
}else{if(O in E){var Q=E[O].expectedTypes;
for(var T=0;
T<Q.length;
T++){U.push(Q[T].id);
}}}}var R=new CueCard.TypeBasedTopicSuggestor(N._popup,CueCard.MqlSyntax.SingleValueSuggestions,U,L.property,d);
var P=new CueCard.SuggestionController(N._popup,N._popup.elmt[0].firstChild,R,W);
};
J.model.locateInnerMostNonTerminal(J.context,A.extend(X));
return true;
}else{F();
var B;
var a=false;
if(G){B=[D.substr(0,D.lastIndexOf("/"))];
}else{if(D=="/type/object/type"){B=["/type/type"];
}else{if(D in E){a=E[D].unique;
B=[];
var b=E[D].expectedTypes;
for(var C=0;
C<b.length;
C++){B.push(b[C].id);
}}else{if(D=="/type/text/lang"){B=["/type/lang"];
}else{B=[];
}}}}var Z=(B.length==1)?B[0]:null;
if(Z!==null&&Z in CueCard.QueryEditor.nativeTypes){var c=new CueCard.StaticChoicesSuggestor(CueCard.MqlSyntax[Z=="/type/text"?(a?"UniqueStringLiteralValueSuggestions":"StringLiteralValueSuggestions"):(a?"UniqueLiteralValueSuggestions":"LiteralValueSuggestions")],d);
}else{var c=new CueCard.TypeBasedTopicSuggestor(N._popup,CueCard.MqlSyntax[a?"UniqueTopicValueSuggestions":"TopicValueSuggestions"],B,"id",d);
}var Y=new CueCard.SuggestionController(N._popup,N._popup.elmt[0].firstChild,c,W);
}}});
};
CueCard.QueryEditor.prototype._suggestValuesForKeyword=function(M,Q,R,U,S,T,O){this._popup.elmt.empty();
var L=CueCard.MqlSyntax.KeywordValueHints[S];
if("html" in L){this._popup.elmt.html('<div class="cuecard-suggestion-hint-message">'+L.html+"</div>");
this.focus();
}else{this._popup.elmt.html("<div></div>");
var P=this;
var N=new CueCard.StaticChoicesSuggestor(L.choices,O);
var V=new CueCard.SuggestionController(this._popup,this._popup.elmt[0].firstChild,N,T);
}};
CueCard.QueryEditor.prototype._prepareQueryForSuggestions=function(W,f,V,e,b){var U=this;
var c="";
var Z;
var a=function(G,D,H,E,B){var C=(E===undefined||typeof H!=="string")?CueCard.jsonize(H,{breakLines:false}):H;
var I=D+(typeof E=="number"?E:C.length);
var F=I+(typeof B=="number"?B:0);
U._editor.editor.replaceSelection(C);
var A=U._editor.nthLine(G+1);
U._editor.selectLines(A,I,A,F);
};
if(e!=null){var R=0;
var S=e.start.col;
if(/^['"]/.test(e.content)){R=1;
}c=e.content.substring(R,V-S).replace(/['"]$/,"");
Z=function(A,B,C){var D=U._editor.nthLine(e.start.line+1);
U._editor.selectLines(D,e.start.col,D,e.end.col);
a(e.start.line,e.start.col,A,B,C);
};
}else{var X=this._editor.cursorPosition(true);
var Q=this._editor.lineNumber(X.line)-1;
var Y=X.character;
Z=function(A,B,C){var D=U._editor.nthLine(Q+1);
U._editor.selectLines(D,Y,D,Y);
a(Q,Y,A,B,C);
};
}var T=function(A){U._popup.close();
if(typeof A=="string"){Z(A);
}else{Z(A.result,A["offset"],A["extent"]);
}};
var d=CueCard.UI.createBlockingContinuations(function(B,A){return b(B,c,T,A||{});
});
this._popup.addPendingContinuation(d);
W.model.qualifyAllProperties(d);
};
CueCard.QueryEditor.prototype._showExamples=function(C){var D=this;
new CueCard.ExampleDialog({onDone:function(A){D.content(A);
D._onRun(false);
}});
};
CueCard.QueryNode=function(B){this.type=B;
this.value=null;
this.isArray=false;
this.startToken=null;
this.endToken=null;
this.links=[];
};
CueCard.QueryNode.TYPE_MISSING=-1;
CueCard.QueryNode.TYPE_TERMINAL=0;
CueCard.QueryNode.TYPE_NONTERMINAL=1;
CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY=2;
CueCard.QueryNode.prototype.toQueryJson=function(B){B=B||{};
if(!("qualifyAllProperties" in B)){B.qualifyAllProperties=false;
}if(!("excludeChild" in B)){B.excludeChild=-1;
}return this._toQueryJson(B);
};
CueCard.QueryNode.prototype._toQueryJson=function(R){var W={qualifyAllProperties:R.qualifyAllProperties,excludeChild:-1};
if(this.type==CueCard.QueryNode.TYPE_TERMINAL){if(this.isArray){var Y=[];
for(var P=0;
P<this.value.length;
P++){var V=this.value[P];
Y.push(V!=null?V._toQueryJson(W):null);
}return Y;
}else{if(this.startToken.type==CueCard.Token.Types.identifier){return{"__identifier__":this.value};
}else{return this.value;
}}}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){var Y=[];
for(var P=0;
P<this.elements.length;
P++){Y.push(this.elements[P]._toQueryJson(W));
}return Y;
}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL){var Q={};
var O=false;
var Z=0;
for(var P=0;
P<this.links.length;
P++){if(P!=R.excludeChild){var N=this.links[P];
if(N.path.length>0){var S=N.getPath(R.qualifyAllProperties);
if(S in Q&&N.namespace.length==0){while(S in Q){N.namespace="ns"+Z+++":";
S=N.getPath(R.qualifyAllProperties);
}}var X=N.value!=null?N.value._toQueryJson(W):null;
Q[S]=X;
if(N.getUnnamespacedQualifiedPath()=="/type/object/type"&&X!=null&&(!(X instanceof Array)||X.length>0)){O=true;
}}}}if(!O&&"expectedTypes" in R&&R.expectedTypes.length>0){var T=[];
for(var P=0;
P<R.expectedTypes.length;
P++){var U=R.expectedTypes[P];
if(U!="/type/object"&&U!="/common/topic"){T.push(U);
}}if(T.length==1){Q["type"]=T[0];
}else{if(T.length>1){Q["type|="]=T;
}}}return Q;
}else{return null;
}}}};
CueCard.QueryNode.isMqlKeyword=function(B){switch(B){case"limit":case"sort":case"*":case"return":case"count":case"estimate-count":case"optional":case"create":case"connect":return true;
}return false;
};
CueCard.QueryNode.prototype.getDeclaredTypes=function(G){var E=null;
if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL){E=this.links;
}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){E=this.elements[0].links;
}}if(E!=null){for(var H=0;
H<E.length;
H++){var F=E[H];
if(F.qualifiedProperty=="/type/object/type"&&!F.reverse){F.getValuesOfType(G,"string");
}}}};
CueCard.QueryNode.prototype.getDeclaredIDs=function(G){var E=null;
if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL){E=this.links;
}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){E=this.elements[0].links;
}}if(E!=null){for(var H=0;
H<E.length;
H++){var F=E[H];
if(F.qualifiedProperty=="/type/object/id"&&!F.reverse){F.getValuesOfType(G,"string");
}}}};
CueCard.QueryNode.prototype.getDeclaredGUIDs=function(F){var E=null;
if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL){E=this.links;
}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){E=this.elements[0].links;
}}if(E!=null){for(var H=0;
H<E.length;
H++){var G=E[H];
if(G.qualifiedProperty=="/type/object/guid"&&!G.reverse){G.getValuesOfType(F,"string");
}}}};
CueCard.QueryNode.prototype.qualifyAllProperties=function(B){this._qualifyAllProperties([],{},B);
};
CueCard.QueryNode.prototype._qualifyAllProperties=function(Y,i,l){if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL){var V=[];
var h=false;
var g=[];
var Z=[];
var a=[];
for(var X=0;
X<this.links.length;
X++){var j=this.links[X];
if(j.value.type==CueCard.QueryNode.TYPE_NONTERMINAL||j.value.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY||j.value.type==CueCard.QueryNode.TYPE_MISSING){V.push(j);
}if(j.qualifiedProperty=="/type/object/type"&&!j.reverse){j.getValuesOfType(g,"string");
}else{if(j.qualifiedProperty=="/type/object/id"&&!j.reverse){j.getValuesOfType(Z,"string");
}else{if(j.qualifiedProperty=="/type/object/guid"&&!j.reverse){j.getValuesOfType(a,"string");
}else{if(j.qualifiedProperty!=null&&j.qualifiedProperty.length>0){var b=j.qualifiedProperty.lastIndexOf("/");
if(b>0){g.push(j.qualifiedProperty.substr(0,b));
}}else{if(!CueCard.QueryNode.isMqlKeyword(j.property)){h=true;
}}}}}}g=g.concat(Y);
var W={};
for(var X=g.length-1;
X>=0;
X--){W[g[X]]=true;
}g=[];
for(var e in W){g.push(e);
}if(!h&&V.length==0){l.onDone(i);
return ;
}var d=this;
var T=function(F){var D=F.properties;
var C=F.qualifications;
for(var B=0;
B<d.links.length;
B++){var A=d.links[B];
if(A.qualifiedProperty.length==0&&!CueCard.QueryNode.isMqlKeyword(A.property)){A.qualifiedProperty=C[A.property]||A.property;
}}for(var E in D){i[E]=D[E];
}(function(){if(V.length==0){l.onDone(i);
}else{var G=V.shift();
var L=[];
if(G.qualifiedProperty in D){var H=D[G.qualifiedProperty].expectedTypes;
for(var J=0;
J<H.length;
J++){L.push(H[J].id);
}}L.push("/common/topic");
L.push("/type/object");
if(G.value.type==CueCard.QueryNode.TYPE_NONTERMINAL){G.value.expectedTypes=L;
}else{if(G.value.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){var K=G.value.elements;
for(var I=0;
I<K.length;
I++){K[I].expectedTypes=L;
}}}G.value._qualifyAllProperties(L,i,{onDone:arguments.callee,onError:l.onError});
}})();
};
var U=[];
if(g.length>0){U.push("t="+encodeURIComponent(g.join(",")));
}if(Z.length>0){U.push("i="+encodeURIComponent(Z.join(",")));
}if(a.length>0){U.push("g="+encodeURIComponent(a.join(",")));
}var k=CueCard.helper+"qualify-properties?"+U.join("&");
CueCard.JsonpQueue.call(k,T,l.onError);
}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){var X=0;
var f=this.elements;
var c=function(){if(X<f.length){f[X++]._qualifyAllProperties(Y,i,{onDone:arguments.callee,onError:l.onError});
}else{l.onDone(i);
}};
c();
}else{l.onDone();
}}};
CueCard.QueryNode.prototype.getCursorFromContext=function(B){return this._getCursorFromContext(B,0);
};
CueCard.QueryNode.prototype._getCursorFromContext=function(G,J){var F=G[J];
if(this.type==CueCard.QueryNode.TYPE_MISSING){var H=this.startToken;
return{line:H.start.line,col:H.start.col};
}else{if(this.type==CueCard.QueryNode.TYPE_TERMINAL){if(this.isArray){if(F.relative=="inside"){if(F.child<this.value.length){return this.value[F.child]._getCursorFromContext(G,J+1);
}else{var H=this.endToken;
return{line:H.start.line,col:H.start.col};
}}else{if(F.child<this.value.length){var I=this.value[F.child];
var H=I.startToken;
return{line:H.start.line,col:H.start.col};
}else{var H=this.startToken;
return{line:H.end.line,col:H.end.col};
}}}else{var H=this.startToken;
return{line:H.start.line,col:H.start.col+("offset" in F?F.offset:0)};
}}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){if(F.relative=="inside"){if(F.child<this.elements.length){return this.elements[F.child]._getCursorFromContext(G,J+1);
}else{var H=this.endToken;
return{line:H.start.line,col:H.start.col};
}}else{if(F.child<this.elements.length){var I=this.elements[F.child];
var H=I.startToken;
return{line:H.start.line,col:H.start.col};
}else{var H=this.startToken;
return{line:H.end.line,col:H.end.col};
}}}else{if(F.relative=="inside"){if(F.child<this.links.length){return this.links[F.child].value._getCursorFromContext(G,J+1);
}else{var H=this.endToken;
return{line:H.start.line,col:H.start.col};
}}else{if(F.relative=="before"){if(F.child<this.links.length){var I=this.links[F.child].value;
var H=I.startToken;
return{line:H.start.line,col:H.start.col};
}else{var H=this.startToken;
return{line:H.end.line,col:H.end.col};
}}else{if(F.child<this.links.length){if(F.relative=="path"){var H=this.links[F.child].token;
return{line:H.start.line,col:H.start.col+("offset" in F?F.offset:0)};
}else{var H=this.links[F.child].value.startToken;
return{line:H.start.line,col:H.start.col};
}}else{var H=this.endToken;
return{line:H.end.line,col:H.end.col};
}}}}}}};
CueCard.QueryNode.prototype.toInsideOutQueryJson=function(E,D){var F=this;
this.qualifyAllProperties({onDone:function(){D.onDone(F._toInsideOutQueryJson(E,0,null,null));
},onError:D.onError});
};
CueCard.QueryNode.prototype._toInsideOutQueryJson=function(O,R,S,T){if(S!=null&&!(T instanceof Array)){T=[T];
}if(R<O.length){var L=O[R];
if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL){if("child" in L&&L.relative=="inside"){var M=L.child;
if(M<this.links.length){var K=this.links[M];
if(K.value.type==CueCard.QueryNode.TYPE_NONTERMINAL||K.value.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){var P=K.getInverseQualifiedPath();
var Q=this.toQueryJson({excludeChild:M});
if(S!=null){if(Q instanceof Array){Q[0][S]=T;
}else{Q[S]=T;
}}return K.value._toInsideOutQueryJson(O,R+1,P,Q);
}}}}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){if("child" in L&&L.relative=="inside"){var M=L.child;
if(this.elements.length>1){throw new Error("Cannot turn a query inside out if a query node has siblings");
}else{if(M==0){var N=this.elements[M]._toInsideOutQueryJson(O,R+1,S,T);
return(N instanceof Array)?N:[N];
}else{return null;
}}}}}}var N=this.toQueryJson({expectedTypes:("expectedTypes" in this)?this.expectedTypes:[]});
if(S!=null){if(typeof N==Array){N[0][S]=T;
}else{N[S]=T;
}}return N;
};
CueCard.QueryNode.prototype.locateInnerMostNonTerminal=function(E,D){var F=this;
this.qualifyAllProperties({onDone:function(){var A=F._locateInnerMostNonTerminal(E,0);
D.onDone(A!=null?A:{node:F,property:null,reverse:false});
},onError:D.onError});
};
CueCard.QueryNode.prototype._locateInnerMostNonTerminal=function(K,N){if(N<K.length){var H=K[N];
if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL){if("child" in H&&H.relative=="inside"){var I=H.child;
if(I<this.links.length){var L=this.links[I];
if(L.value.type==CueCard.QueryNode.TYPE_NONTERMINAL||L.value.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){var M=L.value._locateInnerMostNonTerminal(K,N+1);
if(M==null){M={node:L.value};
}if(!("property" in M)){M.property=L.qualifiedProperty;
M.reverse=L.reverse;
}return M;
}}}}else{if(this.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){if("child" in H&&H.relative=="inside"){var I=H.child;
if(I<this.elements.length){var J=this.elements[I];
var M=J._locateInnerMostNonTerminal(K,N+1);
if(M==null){M={node:J};
}return M;
}}}}}return null;
};
CueCard.QueryNodeLink=function(G,J){this.path=G;
this.token=J;
this.reverse=false;
this.namespace="";
this.property="";
this.originalProperty="";
this.qualifiedProperty="";
this.suffix="";
this.value=null;
if(G.length>0){if(G.charAt(0)=="!"){this.reverse=true;
G=G.substr(1);
}}if(G.length>0){var I=G.indexOf(":");
if(I>=0){this.namespace=G.substr(0,I+1);
G=G.substr(I+1);
if(G.length>0&&G.charAt(0)=="!"){this.reverse=true;
G=G.substr(1);
}}}if(G.length>=2){var H=G.substr(G.length-2);
if(H==">="||H=="<="||H=="~="){this.suffix=H;
G=G.substr(0,G.length-2);
}}if(G.length>1&&this.suffix==""){var H=G.substr(G.length-1);
if(H=="<"||H==">"){this.suffix=H;
G=G.substr(0,G.length-1);
}}this.originalProperty=G;
if(G.length>0){if(G.charAt(0)=="/"){this.qualifiedProperty=G;
var F=G.lastIndexOf("/");
this.property=G.substr(F+1);
}else{this.property=G;
}}if(this.qualifiedProperty==""){if(this.property=="type"){this.qualifiedProperty="/type/object/type";
}else{if(this.property=="id"){this.qualifiedProperty="/type/object/id";
}else{if(this.property=="guid"){this.qualifiedProperty="/type/object/guid";
}else{if(this.property=="name"){this.qualifiedProperty="/type/object/name";
}else{if(this.property=="lang"){this.qualifiedProperty="/type/text/lang";
}else{if(CueCard.QueryNode.isMqlKeyword(this.property)){this.qualifiedProperty=this.property;
}}}}}}}};
CueCard.QueryNodeLink.prototype.getQualifiedPath=function(){return(this.reverse?"!":"")+this.namespace+this.qualifiedProperty+this.suffix;
};
CueCard.QueryNodeLink.prototype.getInverseQualifiedPath=function(){return(this.reverse?"":"!")+this.namespace+this.qualifiedProperty+this.suffix;
};
CueCard.QueryNodeLink.prototype.getUnnamespacedQualifiedPath=function(){return(this.reverse?"!":"")+this.qualifiedProperty+this.suffix;
};
CueCard.QueryNodeLink.prototype.getPath=function(C){var D=(C&&this.qualifiedProperty.length>0)?this.qualifiedProperty:this.originalProperty;
return(this.reverse?"!":"")+this.namespace+D+this.suffix;
};
CueCard.QueryNodeLink.prototype.getValuesOfType=function(L,K){var N=function(A){if(A.isArray){var D=A.value;
for(var B=0;
B<D.length;
B++){var C=D[B];
if(C.type==CueCard.QueryNode.TYPE_TERMINAL&&C.value!=null&&typeof C.value==K){L.push(C.value);
}}}else{if(A.value!=null&&typeof A.value==K){L.push(A.value);
}}};
var I=this.value;
if(I.type==CueCard.QueryNode.TYPE_TERMINAL){N(I);
}else{if(I.type==CueCard.QueryNode.TYPE_NONTERMINAL||I.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){var H=I.type==CueCard.QueryNode.TYPE_NONTERMINAL?I.links:I.elements[0].links;
for(var M=0;
M<H.length;
M++){var J=H[M];
if(J.qualifiedProperty=="/type/value/value"&&J.value.type==CueCard.QueryNode.TYPE_TERMINAL){N(J.value);
}}}}};
CueCard.QueryParser={};
CueCard.QueryParser.parseForContext=function(l,w,c,t){var k=new CueCard.QueryTokenizer(l,w);
var s=k.token();
var q=[];
var n=CueCard.Token.Types;
var j=function(){if(q.length==0){s=k.next();
}else{s=q.shift();
}};
var i=function(A){if(A==0){return s;
}else{while(A>q.length){q.push(k.next());
}return q[A-1];
}};
var z=function(){while(s!=null&&(s.type==n.whitespace||s.type==n.unrecognized)){j();
}};
var u=function(A){return new CueCard.Token(CueCard.Token.Types.phantom,"",A.start,A.start);
};
var r=function(){if(s!=null){return s;
}else{return new CueCard.Token(CueCard.Token.Types.phantom,"",k.index(),k.index());
}};
var h=function(){var A=new CueCard.QueryNode(CueCard.QueryNode.TYPE_MISSING);
A.startToken=A.endToken=u(r());
return A;
};
var d=function(){var A=new CueCard.QueryNode(CueCard.QueryNode.TYPE_TERMINAL);
A.startToken=A.endToken=s;
A.isArray=false;
if(s.type==n.numberLiteral){A.value=parseFloat(s.content);
}else{if(s.type==n.stringLiteral){A.value=s.content.replace(/^['"]/,"").replace(/['"]$/,"");
}else{if(s.type==n.booleanLiteral){A.value=(s.content=="true"||s.content=="True");
}else{if(s.type==n.nullLiteral){A.value=null;
}else{if(s.type==n.delimiter){return null;
}else{A.value=s.content;
}}}}}j();
return A;
};
var b=function(){var B=new CueCard.QueryNode(CueCard.QueryNode.TYPE_TERMINAL);
B.startToken=s;
B.isArray=true;
B.value=[];
if(s!=null&&s.type==n.delimiter&&s.content=="["){j();
}while(s!=null){z();
if(s==null||(s.type==n.delimiter&&s.content=="]")){break;
}var A=f(false);
if(A==null){break;
}B.value.push(A);
z();
if(s!=null&&s.type==n.delimiter&&s.content==","){j();
}}if(s!=null&&s.type==n.delimiter&&s.content=="]"){B.endToken=s;
j();
}if(B.endToken==null){B.endToken=r();
}return B;
};
var p=function(E){var E=new CueCard.QueryNode(CueCard.QueryNode.TYPE_NONTERMINAL);
E.startToken=s;
if(s!=null&&s.type==n.delimiter&&s.content=="{"){j();
}while(s!=null){z();
if(s==null){break;
}var C=null;
var A=null;
var B=null;
if(s.type==n.identifier){C=s.content;
A=s;
j();
z();
}else{if(s.type==n.stringLiteral){C=s.content.replace(/^['"]/,"").replace(/['"]$/,"");
A=s;
j();
z();
}else{A=u(s);
}}if(s!=null&&s.type==n.delimiter&&(s.content==":"||s.content==";")){j();
z();
}if(s!=null){B=f(false);
}if(C!=null||B!=null){var D=new CueCard.QueryNodeLink(C!=null?C:"",A);
D.value=B!=null?B:h();
E.links.push(D);
}z();
if(s==null||(s.type==n.delimiter&&(s.content=="}"||s.content=="]"))){break;
}if(s.type==n.delimiter&&s.content==","){j();
}}if(s!=null&&s.type==n.delimiter&&s.content=="}"){E.endToken=s;
j();
}if(E.endToken==null){E.endToken=r();
}return E;
};
var e=function(){var A=new CueCard.QueryNode(CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY);
A.startToken=s;
A.elements=[];
if(s!=null&&s.type==n.delimiter&&s.content=="["){j();
}while(s!=null){z();
if(s==null||(s.type==n.delimiter&&s.content=="]")){break;
}A.elements.push(p());
z();
if(s!=null&&s.type==n.delimiter&&s.content==","){j();
}}if(s!=null&&s.type==n.delimiter&&s.content=="]"){A.endToken=s;
j();
}if(A.endToken==null){A.endToken=r();
}return A;
};
var g=function(){var B=1;
var A;
while((A=i(B))!=null&&(A.type==n.whitespace||A.type==n.unrecognized)){B++;
}if(A!=null){if(A.type==n.delimiter&&A.content=="{"){return e();
}else{if(A.type==n.identifier||A.type==n.stringLiteral){B++;
while((A=i(B))!=null&&(A.type==n.whitespace||A.type==n.unrecognized)){B++;
}if(A!=null&&A.type==n.delimiter&&A.content==":"){return e();
}}}}return b();
};
var f=function(A){z();
if(s==null){return h();
}else{if(s.type==n.delimiter){if(s.content=="["){return g();
}else{if(s.content=="{"){return p();
}else{return h();
}}}else{if(A){return e();
}else{return d();
}}}};
var v=function(A){return c<A.start.line||(c==A.start.line&&t<=A.start.col);
};
var y=function(A){return c>A.start.line||(c==A.start.line&&t>=A.start.col);
};
var a=function(A){return c<A.end.line||(c==A.end.line&&t<=A.end.col);
};
var v=function(A){return c<A.start.line||(c==A.start.line&&t<=A.start.col);
};
var m=function(A){return A.startToken==A.endToken?(y(A.startToken)&&a(A.startToken)):(y(A.startToken)&&v(A.endToken));
};
var x=function(D,C){if(D.type==CueCard.QueryNode.TYPE_TERMINAL){if(D.isArray){for(var A=0;
A<D.value.length;
A++){var B=D.value[A];
if(v(B.startToken)){C.push({child:A,relative:"before",node:D});
return ;
}else{if(m(B)){C.push({child:A,relative:"inside",node:D});
x(B,C);
return ;
}}}C.push({child:D.value.length,relative:"before",node:D});
}else{C.push({token:D.startToken,node:D,offset:t-D.startToken.start.col});
}}else{if(D.type==CueCard.QueryNode.TYPE_NONTERMINAL_ARRAY){for(var A=0;
A<D.elements.length;
A++){var B=D.elements[A];
if(v(B.startToken)){C.push({child:A,relative:"before",node:D});
return ;
}else{if(m(B)){C.push({child:A,relative:"inside",node:D});
x(B,C);
return ;
}}}C.push({child:D.elements.length,relative:"before",node:D});
}else{if(D.type==CueCard.QueryNode.TYPE_NONTERMINAL){for(var A=0;
A<D.links.length;
A++){var E=D.links[A];
if(v(E.token)){C.push({child:A,relative:"before",node:D});
return ;
}else{if(a(E.token)){C.push({child:A,relative:"path",node:D,offset:t-E.token.start.col});
return ;
}else{if(!y(E.value.startToken)){C.push({child:A,relative:"space",node:D});
return ;
}else{if(a(E.value.endToken)){C.push({child:A,relative:"inside",node:D});
x(E.value,C);
return ;
}}}}}C.push({child:D.links.length,relative:"before",node:D});
}else{C.push({token:D.startToken,node:D});
}}}};
z();
var o={model:f(true),context:[]};
x(o.model,o.context);
return o;
};
CueCard.QueryTokenizer=function(D,C){this._text=D+" ";
this._maxIndex=D.length;
this._index=C;
this._line=0;
this._col=0;
this.next();
};
CueCard.QueryTokenizer.prototype.token=function(){return this._token;
};
CueCard.QueryTokenizer.prototype.index=function(){return this._index;
};
CueCard.QueryTokenizer._whitespaces=" \t\r\n";
CueCard.QueryTokenizer.prototype.next=function(){this._token=null;
if(this._index<this._maxIndex){var L=this._text.charAt(this._index);
var M=this._text.charAt(this._index+1);
var P=this;
function R(){P._index++;
P._col++;
}function N(){return new CueCard.TokenPos(P._index,P._line,P._col);
}function U(){var A=N();
R();
return A;
}function Q(C,D,B){var A=N();
P._pos=A;
P._token=new CueCard.Token(C,B||P._text.substring(D.offset,A.offset),D,A);
}function T(){var A=N();
while(P._index<P._maxIndex){var B=P._text.charAt(P._index);
if(CueCard.QueryTokenizer._whitespaces.indexOf(B)<0){break;
}if(B=="\n"){P._line++;
P._col=0;
}else{P._col++;
}P._index++;
}Q(CueCard.Token.Types.whitespace,A);
}function S(C){var A=N();
if(L=="u"){R();
}R();
var B="";
while(P._index<P._maxIndex){L=P._text.charAt(P._index);
if(L==C){R();
break;
}else{if(L=="\r"||L=="\n"){break;
}}if(L=="\\"){R();
B+=P._text.charAt(P._index);
}else{B+=L;
}R();
}Q(CueCard.Token.Types.stringLiteral,A,B);
}function V(){var B=N();
var A=1;
if(L=="+"){R();
}else{if(L=="-"){R();
A=-1;
}}while(P._index<P._maxIndex&&CueCard.QueryTokenizer._isDigit(P._text.charAt(P._index))){R();
}if(P._index<P._maxIndex&&P._text.charAt(P._index)=="."){R();
while(P._index<P._maxIndex&&CueCard.QueryTokenizer._isDigit(P._text.charAt(P._index))){R();
}}if(P._index<P._maxIndex&&P._text.charAt(P._index)=="e"){R();
L=P._text.charAt(P._index);
if(L=="+"||L=="-"){R();
}while(P._index<P._maxIndex&&CueCard.QueryTokenizer._isDigit(P._text.charAt(P._index))){R();
}}Q(CueCard.Token.Types.numberLiteral,B);
}function O(){var D=N();
while(P._index<P._maxIndex&&CueCard.QueryTokenizer._identifierPrefix.indexOf(P._text.charAt(P._index))>=0){R();
}var E=false;
if(P._index<P._maxIndex-2){var C=P._text.substr(P._index,2);
if(C==">="||C=="<="||C=="~="){R();
R();
E=true;
}}if(!E&&P._index<P._maxIndex-1){var C=P._text.substr(P._index,1);
if(C==">"||C=="<"){R();
E=true;
}}var A=N();
var B=P._text.substring(D.offset,A.offset);
P._pos=A;
if(B=="null"||B=="None"){P._token=new CueCard.Token(CueCard.Token.Types.nullLiteral,B,D,A);
}else{if(B=="true"||B=="True"||B=="false"||B=="False"){P._token=new CueCard.Token(CueCard.Token.Types.booleanLiteral,B,D,A);
}else{P._token=new CueCard.Token(CueCard.Token.Types.identifier,B,D,A);
}}}if(CueCard.QueryTokenizer._whitespaces.indexOf(L)>=0){T();
}else{if("[{}],:".indexOf(L)>=0){Q(CueCard.Token.Types.delimiter,U());
}else{if(L=='"'||L=="'"){S(L);
}else{if(L=="u"&&(M=='"'||M=="'")){S(M);
}else{if(L=="-"||L=="+"||CueCard.QueryTokenizer._isDigit(L)){V();
}else{if(L=="*"){Q(CueCard.Token.Types.identifier,U());
}else{if(CueCard.QueryTokenizer._identifierPrefix.indexOf(L)>=0){O();
}else{Q(CueCard.Token.Types.unrecognized,U());
}}}}}}}}return this._token;
};
CueCard.QueryTokenizer._isDigit=function(B){return"0123456789".indexOf(B)>=0;
};
CueCard.QueryTokenizer._identifierPrefix="#!/_-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
CueCard.TokenPos=function(E,D,F){this.offset=E;
this.line=D;
this.col=F;
};
CueCard.Token=function(H,G,F,E){this.type=H;
this.content=G;
this.start=F;
this.end=E;
};
CueCard.Token.Types={unrecognized:-1,phantom:0,whitespace:1,delimiter:2,nullLiteral:3,numberLiteral:4,stringLiteral:5,booleanLiteral:6,identifier:7};
CueCard.JsonpQueue={pendingCallIDs:{},callInProgress:0};
CueCard.JsonpQueue.cancelAll=function(){CueCard.JsonpQueue.pendingCallIDs={};
};
CueCard.JsonpQueue.call=function(M,J,Q,L){if(CueCard.JsonpQueue.callInProgress==0){document.body.style.cursor="progress";
}CueCard.JsonpQueue.callInProgress++;
var R=new Date().getTime()+"x"+Math.floor(Math.random()*1000);
var O=document.createElement("script");
O.setAttribute("onerror","err"+R+"();");
M+=(M.indexOf("?")<0?"?":"&")+"callback=cb"+R;
O.setAttribute("src",M);
var K=function(){CueCard.JsonpQueue.callInProgress--;
if(CueCard.JsonpQueue.callInProgress==0){document.body.style.cursor="auto";
}if(!(L)){O.parentNode.removeChild(O);
}try{delete window["cb"+R];
delete window["err"+R];
}catch(A){window["cb"+R]=undefined;
window["err"+R]=undefined;
}if(R in CueCard.JsonpQueue.pendingCallIDs){delete CueCard.JsonpQueue.pendingCallIDs[R];
return true;
}else{return false;
}};
var N=function(A){if(K()){try{J(A);
}catch(B){}}};
var P=function(){if(K()){if(typeof Q=="function"){try{Q(M);
}catch(A){}}}};
window["cb"+R]=N;
window["err"+R]=P;
CueCard.JsonpQueue.pendingCallIDs[R]=true;
document.getElementsByTagName("head")[0].appendChild(O);
};
CueCard.JsonpQueue.queryOne=function(G,F,H,E){CueCard.JsonpQueue.queryOneEnvelope({"query":G},F,H,E);
};
CueCard.JsonpQueue.queryOneEnvelope=function(P,J,L,O){var K=CueCard.jsonize({"q1":P},{breakLines:false});
var M=CueCard.freebaseServiceUrl+"api/service/mqlread?queries="+encodeURIComponent(K);
var N=function(A){if(A.q1.code=="/api/status/error"){if(typeof L=="function"){L(A.q1);
}}else{J(A.q1);
}};
var I=function(){if(typeof L=="function"){L("Unknown");
}};
CueCard.JsonpQueue.call(M,N,I,O);
};
CueCard.StaticChoicesSuggestor=function(D,C){this._defaultSuggestions=D;
this._onCommit=C;
};
CueCard.StaticChoicesSuggestor.prototype.getSuggestions=function(H,G){H=H.toLowerCase();
var F=[];
for(var J=0;
J<this._defaultSuggestions.length;
J++){var I=this._defaultSuggestions[J];
if(H.length==0||I.label.toLowerCase().indexOf(H)>=0){F.push(I);
}}G(F);
};
CueCard.StaticChoicesSuggestor.prototype.commit=function(B){this._onCommit(B);
};
CueCard.SuggestionController=function(H,J,K,I){this._popup=H;
this._suggestor=K;
this._lastText=I;
this._selectedIndex=-1;
this._suggestions=[];
this._input=$('<input value="'+I+'" />');
this._suggestionContainer=$('<div class="cuecard-suggestion-container"></div>');
$(J).append($('<div class="cuecard-suggestion-input-container"></div>').append(this._input)).append(this._suggestionContainer);
var L=this;
this._onKeyUp=function(B){if(!B.shiftKey&&!B.metaKey&&!B.ctrlKey){if(B.keyCode==36||B.keyCode==38||B.keyCode==40){return L._cancelEvent(B);
}var A=L._input[0].value;
if(A!=L._lastText){L._lastText=A;
L._updateSuggestions();
}}};
this._onKeyDown=function(A){while(!A.shiftKey&&!A.metaKey&&!A.ctrlKey){if(A.keyCode==13||A.keyCode==9){L._commitSelectedSuggestion();
}else{if(A.keyCode==36){if(L._suggestions.length>0){L._selectSuggestion(0,true);
}}else{if(A.keyCode==38){if(L._selectedIndex>0){L._selectSuggestion(L._selectedIndex-1,true);
}}else{if(A.keyCode==40){if(L._selectedIndex<L._suggestions.length-1){L._selectSuggestion(L._selectedIndex+1,true);
}}else{break;
}}}}return L._cancelEvent(A);
}if("onKeyDown" in L._suggestor){return L._suggestor.onKeyDown(A,L._input[0].value);
}};
this._input.keyup(this._onKeyUp).keydown(this._onKeyDown);
var M=this._input[0];
if(M.setSelectionRange){M.focus();
M.setSelectionRange(I.length,I.length);
}else{if(M.createTextRange){var N=M.createTextRange();
N.collapse(true);
N.moveEnd("character",I.length);
N.moveStart("character",I.length);
N.select();
}}this._input[0].focus();
this._updateSuggestions();
};
CueCard.SuggestionController.prototype._updateSuggestions=function(){this._suggestionContainer.empty();
this._suggestionContainer.html('<div class="cuecard-suggestion-progress">Please wait...</div>');
this._selectedIndex=-1;
this._suggestions.length=0;
var B=this;
this._suggestor.getSuggestions(this._lastText,function(A){B._renderSuggestions(A,B._lastText);
});
};
CueCard.SuggestionController.prototype._renderSuggestions=function(G,H){var L=this._suggestionContainer;
L.empty();
var K=this;
var I=function(A,C){var B="elmt" in A?A.elmt:$('<a class="cuecard-suggestion-entry" href="javascript:{}">'+A.label+("hint" in A?(' <span class="cuecard-suggestion-hint">'+A.hint+"</span>"):"")+"</a>");
B.mouseover(function(D){K._selectSuggestion(C,false);
}).click(function(D){K._commitSelectedSuggestion();
}).appendTo(L);
};
this._suggestions=G;
for(var J=0;
J<G.length;
J++){I(G[J],J);
}if(this._suggestions.length>0){this._selectSuggestion(0,false);
}else{$('<div class="cuecard-suggestion-noEntryMessage">No suggestion available.<br/>Press Enter to keep what you have typed,<br/>ESC to discard it.</div>').appendTo(L);
}this._popup.reposition();
};
CueCard.SuggestionController.prototype._selectSuggestion=function(F,E){var D=this._suggestionContainer;
if(this._selectedIndex>=0){this._getSuggestion(this._selectedIndex).removeClass("cuecard-suggestion-selected");
}this._selectedIndex=F;
this._getSuggestion(this._selectedIndex).addClass("cuecard-suggestion-selected");
if(E){this._getSuggestion(this._selectedIndex)[0].scrollIntoView(false);
}};
CueCard.SuggestionController.prototype._commitSelectedSuggestion=function(){if(this._selectedIndex>=0){this._suggestor.commit(this._suggestions[this._selectedIndex]);
}else{this._suggestor.commit(this._input[0].value);
}};
CueCard.SuggestionController.prototype._getSuggestion=function(B){return $(this._suggestionContainer.children()[B]);
};
CueCard.SuggestionController.prototype._cancelEvent=function(B){B.returnValue=false;
B.cancelBubble=true;
if("preventDefault" in B){B.preventDefault();
}return false;
};
CueCard.TypeBasedTopicSuggestor=function(H,I,G,J,F){this._popup=H;
this._defaultSuggestions=I;
this._expectedTypes=G;
this._desiredProperty=J;
this._onCommit=F;
this._popup.elmt.addClass("cuecard-popup-container-wide");
};
CueCard.TypeBasedTopicSuggestor.prototype.getSuggestions=function(J,I){J=J.toLowerCase();
if(J.length==0){var N=[];
for(var K=0;
K<this._defaultSuggestions.length;
K++){N.push(this._defaultSuggestions[K]);
}I(N);
}else{var M=this;
var H=CueCard.UI.createBlockingContinuations(function(D,F){var E=[];
for(var A=0;
A<F.result.length;
A++){var C=F.result[A];
var B=null;
if("/common/topic/image" in C&&C["/common/topic/image"]!=null&&C["/common/topic/image"].length>0){B=CueCard.freebaseServiceUrl+"api/trans/image_thumb"+C["/common/topic/image"][0].id+"?mode=fillcrop&maxwidth=40&maxheight=40";
}E.push({result:C[M._desiredProperty],elmt:$('<a class="cuecard-suggestion-entry" href="javascript:{}"><table cellpadding="0" cellspacing="0"><tr valign="top"><td valign="top">'+(B==null?'<div class="cuecard-suggestion-thumbnail-empty"> </div>':('<img src="'+B+'" />'))+'</td><td valign="top">'+C.name+'<div class="cuecard-suggestion-id">'+C[M._desiredProperty]+"</div></td></tr></table></a>")});
}I(E);
});
this._popup.addPendingContinuation(H);
var L=CueCard.helper+"suggest-values-of-types?t="+encodeURIComponent(this._expectedTypes.join(","))+"&q="+encodeURIComponent(J);
CueCard.JsonpQueue.call(L,H.onDone,H.onError);
}};
CueCard.TypeBasedTopicSuggestor.prototype.commit=function(B){this._onCommit(B);
};
CueCard.TypeSuggestor=function(B){};
CueCard.TypeSuggestor.prototype.getSuggestions=function(B){};
CueCard.UI={};
CueCard.UI.reportError=function(D){try{console.log(D);
}catch(C){alert(D);
}};
CueCard.UI.createBlockingContinuations=function(D,C){return new CueCard.UI.Cont(D,C);
};
CueCard.UI.Cont=function(E,F){var D=this;
this._onDone=E;
this._onError=F||CueCard.UI.reportError;
this._progressUI=null;
this._canceled=false;
this._cleanedUp=false;
this.cleanUp=function(){if(!D._cleanedUp){D._cleanedUp=true;
if(D._progressUI!=null){D._progressUI.remove();
D._progressUI=null;
}}};
this.cancel=function(){if(!D._canceled){D._canceled=true;
D.cleanUp();
}};
this.onError=function(){D.cleanUp();
D._onError();
};
this.onDone=function(){var B=false;
if(!D._canceled){var C=[D];
for(var A=0;
A<arguments.length;
A++){C.push(arguments[A]);
}B=D._onDone.apply(null,C);
}if(!(B)){D.cleanUp();
}};
window.setTimeout(function(){if(!D._cleanedUp){D._progressUI=$('<div class="cuecard-progress">Working...</div>').appendTo($(document.body));
}},300);
};
CueCard.UI.Cont.prototype.isCanceled=function(){return this._canceled;
};
CueCard.UI.Cont.prototype.extend=function(D,C){this._onDone=D;
this._onError=C||this._onError;
return this;
};
CueCard.Utils={};
CueCard.Utils.getPaddingsMargins=function(E,D){if(E.getComputedStyle){var F=E.getComputedStyle(D,null);
return{paddingTop:F.getPropertyValue("padding-top"),marginTop:F.getPropertyValue("margin-top"),paddingLeft:F.getPropertyValue("padding-left"),marginLeft:F.getPropertyValue("margin-left")};
}else{var F=D.currentStyle;
return{paddingTop:F.paddingTop,marginTop:F.marginTop,paddingLeft:F.marginLeft,marginLeft:F.marginLeft};
}};
CueCard.XMetawebCosts={"tu":{meaning:"time/user",subsystem:"graphd"},"ts":{meaning:"time/system",subsystem:"graphd"},"tr":{meaning:"time/real",subsystem:"graphd"},"te":{meaning:"time/overall",subsystem:"graphd"},"pr":{meaning:"page reclaims",subsystem:"graphd"},"pf":{meaning:"page faults",subsystem:"graphd"},"dw":{meaning:"primitive data writes",subsystem:"graphd"},"dr":{meaning:"primitive data reads",subsystem:"graphd"},"in":{meaning:"index size reads",subsystem:"graphd"},"ir":{meaning:"index element reads",subsystem:"graphd"},"iw":{meaning:"index element write",subsystem:"graphd"},"va":{meaning:"value allocation",subsystem:"graphd"},"dt":{meaning:"total time spent in the session",subsystem:"client/me"},"mr":{meaning:"number of mql requests (independent of caches)",subsystem:"client/me"},"ch":{meaning:"cache/hit (memcache, not Squid)",subsystem:"client/me",important:true},"cm":{meaning:"cache/miss (memcache, not Squid)",subsystem:"client/me"},"cr":{meaning:"cache/read (memcache, not Squid)",subsystem:"client/me"},"cs":{meaning:"cache skip (browser shift+reload skips memcache)",subsystem:"client/me"},"lh":{meaning:"lojson-cache/hit",subsystem:"client/me"},"lm":{meaning:"lojson-cache/miss",subsystem:"client/me"},"lr":{meaning:"lojson-cache/read",subsystem:"client/me"},"nreqs":{meaning:"graph requests",subsystem:"client/me",important:true},"tf":{meaning:"time/formatted",subsystem:"client/me"},"tg":{meaning:"time/graph",subsystem:"client/me",important:true},"rt":{meaning:"relevance/time",subsystem:"client/me"},"cc":{meaning:"cpu time (utime + stime)",subsystem:"client/me"},"mcu":{meaning:"mql user time",subsystem:"client/me"},"mcs":{meaning:"mql system time",subsystem:"client/me"},"tm":{meaning:"mql real time",subsystem:"client/me",important:true},"utime":{meaning:"time in user mode (float)",subsystem:"client/me"},"stime":{meaning:"time in system mode (float)",subsystem:"client/me"},"maxrss":{meaning:"maximum resident set size",subsystem:"client/me"},"ixrss":{meaning:"shared memory size",subsystem:"client/me"},"idrss":{meaning:"unshared memory size",subsystem:"client/me"},"isrss":{meaning:"unshared stack size",subsystem:"client/me"},"minflt":{meaning:"page faults not requiring I/O",subsystem:"client/me"},"majflt":{meaning:"page faults requiring I/O",subsystem:"client/me"},"nswap":{meaning:"number of swap outs",subsystem:"client/me"},"inblock":{meaning:"block input operations",subsystem:"client/me"},"oublock":{meaning:"block output operations",subsystem:"client/me"},"msgsnd":{meaning:"messages sent",subsystem:"client/me"},"msgrcv":{meaning:"messages received",subsystem:"client/me"},"nsignals":{meaning:"signals received",subsystem:"client/me"},"nvcsw":{meaning:"voluntary context switches",subsystem:"client/me"},"nivcsw":{meaning:"involuntary context switches",subsystem:"client/me"},"br":{meaning:"number of blob requests",subsystem:"client/me"},"bctn":{meaning:"cdb thumbnail time - from blobclient POV",subsystem:"client/me"},"rt":{meaning:"relevance/time (FIX: same name, different semantics?)",subsystem:"gix"},"pt":{meaning:"postgres time",subsystem:"gix"},"qt":{meaning:"actual postgres query time",subsystem:"gix"},"ct":{meaning:"postgres connect time",subsystem:"gix"},"mt":{meaning:"MQL time",subsystem:"gix"},"tt":{meaning:"total time",subsystem:"other"},"mt":{meaning:"total MQL time: mql_output + mql_filter",subsystem:"other"},"mft":{meaning:"MQL filter time (total time, ie. not per invocation)",subsystem:"other"},"mfc":{meaning:"number of mql_filter invocations",subsystem:"other"},"sh":{meaning:"squid/hit",subsystem:"cache"},"st":{meaning:"squid/total time",subsystem:"cache"},"so":{meaning:"squid/origin server time",subsystem:"cache"}};
